<?xml version="1.0"?>
<doc>
    <assembly>
        <name>nanoFramework.Graphics</name>
    </assembly>
    <members>
        <member name="T:nanoFramework.UI.Input.ButtonDevice">
            <summary>
                The ButtonDevice class represents the button device to the
                members of a context.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.ButtonDevice.Target">
            <summary>
                Returns the element that input from this device is sent to.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.ButtonDevice.DeviceType">
            <summary>
             Device Type
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonDevice.Focus(nanoFramework.Presentation.UIElement)">
            <summary>
                Focuses the button input on a particular element.
            </summary>
            <param name="obj">
                The element to focus the button pad on.
            </param>
            <returns>Element focused to</returns>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonDevice.IsButtonDown(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is down.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonDevice.IsButtonUp(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is up.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonDevice.IsButtonHeld(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is held.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonDevice.GetButtonState(nanoFramework.UI.Input.Button)">
            <summary>
                Returns the state of the specified button.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.Button">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.None">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LBUTTON">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RBUTTON">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CANCEL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MBUTTON">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BACK">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_TAB">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CLEAR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RETURN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SHIFT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CONTROL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MENU">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PAUSE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CAPITAL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_KANA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HANGEUL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HANGUL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_JUNJA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_FINAL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HANJA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_KANJI">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_ESCAPE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CONVERT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NOCONVERT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SPACE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PRIOR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NEXT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_END">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HOME">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LEFT">
            <summary> The LEFT button. </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_UP">
            <summary>  The UP button.  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RIGHT">
            <summary> The RIGHT button. </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DOWN">
            <summary> The DOWN button. </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SELECT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PRINT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_EXECUTE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SNAPSHOT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_INSERT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DELETE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HELP">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_0">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_2">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_3">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_4">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_5">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_6">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_7">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_8">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_9">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_A">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_B">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_C">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_D">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_E">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_G">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_H">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_I">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_J">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_K">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_L">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_M">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_N">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_O">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_P">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_Q">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_R">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_S">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_T">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_U">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_V">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_W">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_X">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_Y">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_Z">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LWIN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RWIN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_APPS">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SLEEP">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD0">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD2">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD3">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD4">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD5">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD6">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD7">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD8">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMPAD9">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MULTIPLY">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_ADD">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SEPARATOR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SUBTRACT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DECIMAL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DIVIDE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F2">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F3">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F4">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F5">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F6">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F7">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F8">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F9">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F10">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F11">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F12">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F13">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F14">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F15">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F16">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F17">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F18">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F19">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F20">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F21">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F22">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F23">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_F24">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NUMLOCK">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SCROLL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LSHIFT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RSHIFT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LCONTROL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RCONTROL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LMENU">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RMENU">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_EXTEND_BSLASH">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_OEM_102">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PROCESSKEY">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_ATTN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_CRSEL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_EXSEL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_EREOF">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PLAY">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_ZOOM">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_NONAME">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PA1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_OEM_CLEAR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SEMICOLON">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_EQUAL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_COMMA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_HYPHEN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_PERIOD">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_SLASH">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BACKQUOTE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_BACK">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_FORWARD">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_REFRESH">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_STOP">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_SEARCH">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_FAVORITES">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BROWSER_HOME">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_VOLUME_MUTE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_VOLUME_DOWN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_VOLUME_UP">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MEDIA_NEXT_TRACK">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MEDIA_PREV_TRACK">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MEDIA_STOP">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_MEDIA_PLAY_PAUSE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LAUNCH_MAIL">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LAUNCH_MEDIA_SELECT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LAUNCH_APP1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LAUNCH_APP2">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_LBRACKET">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_BACKSLASH">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_RBRACKET">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_APOSTROPHE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_OFF">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_ALPHANUMERIC">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_KATAKANA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_HIRAGANA">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_SBCSCHAR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_DBCSCHAR">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_ROMAN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_NOROMAN">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_ENTERWORDREGISTERMODE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_ENTERIMECONFIGMODE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_FLUSHSTRING">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_CODEINPUT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_NOCODEINPUT">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_DETERMINESTRING">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.VK_DBE_ENTERDLGCONVERSIONMODE">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.LastSystemDefinedButton">
            <summary>
            Last in the standard MF buttons enumeration
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined1">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined2">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined3">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined4">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined5">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined6">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined7">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Button.AppDefined8">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.ButtonEventArgs">
            <summary>
                The ButtonEventArgs class contains information about button states.
            </summary>
            <ExternalAPI/>
        </member>
        <member name="M:nanoFramework.UI.Input.ButtonEventArgs.#ctor(nanoFramework.UI.Input.ButtonDevice,nanoFramework.Presentation.PresentationSource,System.DateTime,nanoFramework.UI.Input.Button)">
            <summary>
                Constructs an instance of the ButtonEventArgs class.
            </summary>
            <param name="buttonDevice">
                The button device associated with this event.
            </param>
            <param name="inputSource">
                Presentation Source
            </param>
            <param name="timestamp">
                The time when the input occured. (machine time)
            </param>
            <param name="button">
                The button referenced by the event.
            </param>
        </member>
        <member name="F:nanoFramework.UI.Input.ButtonEventArgs.Button">
            <summary>
                The Button referenced by the event.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.ButtonEventArgs.ButtonState">
            <summary>
                The state of the button referenced by the event.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.ButtonEventArgs.InputSource">
            <summary>
            The source for this button
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.ButtonEventArgs.IsRepeat">
            <summary>
                Whether the button pressed is a repeated button or not.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.ButtonEventHandler">
            <summary>
                The delegate to use for handlers that receive ButtonEventArgs.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.Buttons">
            <summary>
                The Button class represents the button device to the
                members of a context.
            </summary>
            <remarks>
                The static members of this class simply delegate to the primary
                button device of the calling thread's input manager.
            </remarks>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.PreviewButtonDownEvent">
            <summary>
                PreviewButtonDown
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.PreviewButtonUpEvent">
            <summary>
                PreviewButtonUp
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.ButtonDownEvent">
            <summary>
                ButtonDown
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.ButtonUpEvent">
            <summary>
                ButtonUp
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.GotFocusEvent">
            <summary>
                GotFocus
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.Buttons.LostFocusEvent">
            <summary>
                LostFocus
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.Buttons.FocusedElement">
            <summary>
                Returns the element that the button is focused on.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.Buttons.Focus(nanoFramework.Presentation.UIElement)">
            <summary>
                Focuses the button on a particular element.
            </summary>
            <param name="element">
                The element to focus the button on.
            </param>
        </member>
        <member name="M:nanoFramework.UI.Input.Buttons.IsButtonDown(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is down.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.Buttons.IsButtonUp(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is up.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.Buttons.IsButtonHeld(nanoFramework.UI.Input.Button)">
            <summary>
                Returns whether or not the specified button is held.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.Buttons.GetButtonState(nanoFramework.UI.Input.Button)">
            <summary>
                Returns the state of the specified button.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.Buttons.PrimaryDevice">
            <summary>
                The primary button device.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.ButtonState">
            <summary>
                The ButtonState enumeration describes the state that buttons
                can be in.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.ButtonState.None">
            <summary>
                No state (same as up).
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.ButtonState.Down">
            <summary>
               The button is down.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.ButtonState.Held">
            <summary>
               The button is held
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.FocusChangedEventArgs">
            <summary>
                The FocusChangedEventArgs class contains information about focus states
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.FocusChangedEventArgs.#ctor(nanoFramework.UI.Input.ButtonDevice,System.DateTime,nanoFramework.Presentation.UIElement,nanoFramework.Presentation.UIElement)">
            <summary>
                Constructs an instance of the FocusChangedEventArgs class.
            </summary>
            <param name="buttonDevice">
                The logical button device associated with this event.
            </param>
            <param name="timestamp">
                The time when the input occured.
            </param>
            <param name="oldFocus">
                The element that previously had focus.
            </param>
            <param name="newFocus">
                The element that now has focus.
            </param>
        </member>
        <member name="F:nanoFramework.UI.Input.FocusChangedEventArgs.OldFocus">
            <summary>
                The element that previously had focus.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.FocusChangedEventArgs.NewFocus">
            <summary>
                The element that now has focus.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.FocusChangedEventHandler">
            <summary>
                The delegate to use for handlers that receive FocusChangedEventArgs.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.GenericEventHandler">
            <summary>
            Generic Event handler
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:nanoFramework.UI.Input.GenericEventArgs">
            <summary>
             Event Args
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.GenericEventArgs.#ctor(nanoFramework.UI.Input.InputDevice,nanoFramework.Runtime.Events.GenericEventEx)">
            <summary>
             Generic Event Args
            </summary>
            <param name="inputDevice"></param>
            <param name="genericEvent"></param>
        </member>
        <member name="F:nanoFramework.UI.Input.GenericEventArgs.InternalEvent">
            <summary>
            GenericEventEx
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.GenericEvents">
            <summary>
            Generic Events
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.GenericEvents.GenericStandardEvent">
            <summary>
            Generic Standard Events
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.GenericDevice">
            <summary>
                The GenericDevice class represents the Generic device to the
                members of a context.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.GenericDevice.Target">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.GenericDevice.SetTarget(nanoFramework.Presentation.UIElement)">
            <summary>
            SetTarget
            </summary>
            <param name="target"></param>
        </member>
        <member name="P:nanoFramework.UI.Input.GenericDevice.DeviceType">
            <summary>
             Input Manager
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputDevice">
            <summary>
                Provides the base class for all input devices.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputDevice.#ctor">
            <summary>
                Constructs an instance of the InputDevice class.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputDevice.Target">
            <summary>
                Returns the element that input from this device is sent to.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputDevice.DeviceType">
            <summary>
            Input Device Type
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputEventArgs">
            <summary>
                The InputEventArgs class represents a type of RoutedEventArgs that
                are relevant to all input events.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputEventArgs.#ctor(nanoFramework.UI.Input.InputDevice,System.DateTime)">
            <summary>
                Initializes a new instance of the InputEventArgs class.
            </summary>
            <param name="inputDevice">
                The input device to associate with this event.
            </param>
            <param name="timestamp">
                The time when the input occured.
            </param>
        </member>
        <member name="P:nanoFramework.UI.Input.InputEventArgs.Device">
            <summary>
                Read-only access to the input device that initiated this
                event.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputEventArgs.Timestamp">
            <summary>
                Read-only access to the input timestamp.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputEventHandler">
            <summary>
                The delegate to use for handlers that receive InputEventArgs.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputManager">
             <summary>
                 The InputManager class is responsible for coordinating all of the
                 input system in nanoFramework.
            
                 The input manager exists per Dispatcher
             </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.PreviewInputReportEvent">
            <summary>
                A routed event indicating that an input report arrived.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputReportEvent">
            <summary>
                A routed event indicating that an input report arrived.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.CurrentInputManager">
            <summary>
                Return the input manager associated with the current context.
            </summary>
            <remarks>
                This class will not be available in internet zone.
            </remarks>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.ButtonDevice">
            <summary>
            Button Device
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.TouchDevice">
            <summary>
            Touch Device
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.GenericDevice">
            <summary>
            GenericDevice
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputManager.RegisterInputProvider(System.Object)">
            <summary>
                Registers an input provider with the input manager.
            </summary>
            <param name="inputProvider">
                The input provider to register.
            </param>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.InputProviders">
            <summary>
                Returns a collection of input providers registered with the input manager.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputManager.MostRecentInputDevice">
            <summary>
                The MostRecentInputDevice represents the last input device to
                report an "interesting" user action.  What exactly constitutes
                such an action is up to each device to implement.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputManager.ProcessInput(nanoFramework.UI.Input.InputEventArgs)">
            <summary>
                Synchronously processes the specified input.
            </summary>
            <remarks>
                The specified input is processed by all of the filters and
                monitors, and is finally dispatched to the appropriate
                element as an input event.
            </remarks>
            <returns>
                Whether or not any event generated as a consequence of this
                event was handled.
            </returns>
        </member>
        <member name="T:nanoFramework.UI.Input.InputManager.InputDeviceType">
            <summary>
            Input Device Type
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputDeviceType.Button">
            <summary>
            Button
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputDeviceType.Touch">
            <summary>
            Touch
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputDeviceType.Generic">
            <summary>
            Generic
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputDeviceType.Last">
            <summary>
            Last
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputManager.DeviceEvents">
            <summary>
             Device Events
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Input.InputManager.DeviceEvents.PreProcessInput">
            <summary>Subscribe for all input before it is processed</summary>
        </member>
        <member name="E:nanoFramework.UI.Input.InputManager.DeviceEvents.PreNotifyInput">
            <summary>Subscribe for all input before it is notified</summary>
        </member>
        <member name="E:nanoFramework.UI.Input.InputManager.DeviceEvents.PostNotifyInput">
            <summary>Subscribe to all input after it is notified</summary>
        </member>
        <member name="E:nanoFramework.UI.Input.InputManager.DeviceEvents.PostProcessInput">
            <summary>subscribe to all input after it is processed</summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputManager.InputDeviceEvents">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputProviderSite">
            <summary>
                The object which input providers use to report input to the input manager.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.InputProviderSite.InputManager">
            <summary>
                Returns the input manager that this site is attached to.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputProviderSite.Dispose">
            <summary>
                Unregisters this input provider.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputProviderSite.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:nanoFramework.UI.Input.InputProviderSite.IsDisposed">
            <summary>
            Returns true if we are disposed.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputProviderSite.ReportInput(nanoFramework.UI.Input.InputDevice,nanoFramework.UI.Input.InputReport)">
            <summary>
                Reports input to the input manager.
            </summary>
            <returns>
                Whether or not any event generated as a consequence of this
                event was handled.
            </returns>
        </member>
        <member name="T:nanoFramework.UI.Input.InputReport">
            <summary>
                The InputReport is an abstract base class for all input that is
                reported to the InputManager.
            </summary>
            <remarks>
                It is important to note that the InputReport class only contains
                blittable types.  This is required so that the report can be
                marshalled across application domains.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.InputReport.#ctor(nanoFramework.Presentation.PresentationSource,System.DateTime)">
            <summary>
                Constructs an instance of the InputReport class.
            </summary>
            <param name="inputSource">
                The type of input that is being reported.
            </param>
            <param name="timestamp">
                The time when the input occured.
            </param>
        </member>
        <member name="F:nanoFramework.UI.Input.InputReport.InputSource">
            <summary>
                Read-only access to the type of input source that reported input.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputReport.Timestamp">
            <summary>
                Read-only access to the time when the input occured.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputReportArgs">
            <summary>
                report arguments
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputReportArgs.#ctor(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="dev"></param>
            <param name="report"></param>
        </member>
        <member name="F:nanoFramework.UI.Input.InputReportArgs.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.InputReportArgs.Report">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputReportEventArgs">
            <summary>
                The InputReportEventArgs class contains information about an input
                report that is being processed.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.InputReportEventArgs.#ctor(nanoFramework.UI.Input.InputDevice,nanoFramework.UI.Input.InputReport)">
            <summary>
                Initializes a new instance of the InputReportEventArgs class.
            </summary>
            <param name="inputDevice">
                The input device to associate this input with.
            </param>
            <param name="report">
                The input report being processed.
            </param>
        </member>
        <member name="F:nanoFramework.UI.Input.InputReportEventArgs.Report">
            <summary>
                Read-only access to the input report being processed.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.InputReportEventHandler">
            <summary>
                The delegate to use for handlers that receive InputReportEventArgs
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.NotifyInputEventArgs">
            <summary>
                Provides information about an input event being processed by the
                input manager.
            </summary>
            <remarks>
                An instance of this class, or a derived class, is passed to the
                handlers of the following events:
                <list>
                </list>
            </remarks>
        </member>
        <member name="F:nanoFramework.UI.Input.NotifyInputEventArgs.StagingItem">
            <summary>
                The staging area input item being processed by the input
                manager.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.NotifyInputEventHandler">
            <summary>
                Delegate type for handles of events that use
                <see cref="T:nanoFramework.UI.Input.NotifyInputEventArgs"/>.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.PreProcessInputEventArgs">
            <summary>
                Allows the handler to cancel the processing of an input event.
            </summary>
            <remarks>
                An instance of this class is passed to the handlers of the
                following events:
                     cref="InputManager.PreProcessInput"
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.PreProcessInputEventArgs.Cancel">
            <summary>
                Cancels the processing of the input event.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.PreProcessInputEventArgs.Canceled">
            <summary>
                Whether or not the input event processing was canceled.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.PreProcessInputEventHandler">
            <summary>
                Delegate type for handles of events that use
                <see cref="T:nanoFramework.UI.Input.PreProcessInputEventArgs"/>.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.ProcessInputEventArgs">
            <summary>
                Provides access to the input manager's staging area.
            </summary>
            <remarks>
                An instance of this class, or a derived class, is passed to the
                handlers of the following events:
                  cref="InputManager.PreProcessInput"
                    cref="InputManager.PostProcessInput"
                   
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.ProcessInputEventArgs.PushInput(nanoFramework.UI.Input.InputEventArgs,nanoFramework.UI.Input.StagingAreaInputItem)">
            <summary>
                Pushes an input event onto the top of the staging area.
            </summary>
            <param name="input">
                The input event to place on the staging area.  This may not
                be null, and may not already exist in the staging area.
            </param>
            <param name="promote">
                An existing staging area item to promote the state from.
            </param>
            <returns>
                The staging area input item that wraps the specified input.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Input.ProcessInputEventArgs.PushInput(nanoFramework.UI.Input.StagingAreaInputItem)">
            <summary>
                Pushes an input event onto the top of the staging area.
            </summary>
            <param name="input">
                The input event to place on the staging area.  This may not
                be null, and may not already exist in the staging area.
            </param>
            <returns>
                The specified staging area input item.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Input.ProcessInputEventArgs.PopInput">
            <summary>
                Pops off the input event on the top of the staging area.
            </summary>
            <returns>
                The input event that was on the top of the staging area.
                This can be null, if the staging area was empty.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Input.ProcessInputEventArgs.PeekInput">
            <summary>
                Returns the input event on the top of the staging area.
            </summary>
            <returns>
                The input event that is on the top of the staging area.
                This can be null, if the staging area is empty.
            </returns>
        </member>
        <member name="T:nanoFramework.UI.Input.ProcessInputEventHandler">
            <summary>
                Delegate type for handles of events that use
                <see cref="T:nanoFramework.UI.Input.ProcessInputEventArgs"/>.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.RawButtonInputReport">
            <summary>
                The RawButtonInputReport class encapsulates the raw input
                provided from a keyboard.
            </summary>
            <remarks>
                It is important to note that the InputReport class only contains
                blittable types.  This is required so that the report can be
                marshalled across application domains.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.RawButtonInputReport.#ctor(nanoFramework.Presentation.PresentationSource,System.DateTime,nanoFramework.UI.Input.Button,nanoFramework.UI.Input.RawButtonActions)">
            <summary>
                Constructs an instance of the RawKeyboardInputReport class.
            </summary>
            <param name="inputSource"></param>
            <param name="timestamp"></param>
            <param name="button"></param>
            <param name="actions"></param>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonInputReport.Button">
            <summary>
            Read-only access to the button reported.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonInputReport.Actions">
            <summary>
            Read-only access to the action reported.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.RawButtonActions">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonActions.ButtonDown">
            <summary>
            Button Down
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonActions.ButtonUp">
            <summary>
            Button Up
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonActions.Activate">
            <summary>
            Activate
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawButtonActions.Deactivate">
            <summary>
            Deactivate
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.RawGenericInputReport">
            <summary>
                The RawGenericInputReport class encapsulates the raw input
                provided from a keyboard.
            </summary>
            <remarks>
                It is important to note that the InputReport class only contains
                blittable types.  This is required so that the report can be
                marshalled across application domains.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.RawGenericInputReport.#ctor(nanoFramework.Presentation.PresentationSource,nanoFramework.Runtime.Events.GenericEventEx)">
            <summary>
                Constructs an instance of the RawKeyboardInputReport class.
            </summary>
            <param name="inputSource">
                source of the input
            </param>
            <param name="genericEvent">
                Generic event
            </param>
        </member>
        <member name="M:nanoFramework.UI.Input.RawGenericInputReport.#ctor(nanoFramework.Presentation.PresentationSource,nanoFramework.Runtime.Events.GenericEventEx,nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="inputSource"></param>
            <param name="genericEvent"></param>
            <param name="destTarget"></param>
        </member>
        <member name="F:nanoFramework.UI.Input.RawGenericInputReport.Target">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawGenericInputReport.InternalEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.RawTouchInputReport">
            <summary>
                The RawTouchInputReport class encapsulates the raw input
                provided from a multitouch source.
            </summary>
            <remarks>
                It is important to note that the InputReport class only contains
                blittable types.  This is required so that the report can be
                marshalled across application domains.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Input.RawTouchInputReport.#ctor(nanoFramework.Presentation.PresentationSource,System.DateTime,System.Byte,nanoFramework.UI.TouchInput[])">
            <summary>
                Constructs an instance of the RawKeyboardInputReport class.
            </summary>
            <param name="inputSource"></param>
            <param name="timestamp"></param>
            <param name="eventMessage"></param>
            <param name="touches"></param>
        </member>
        <member name="M:nanoFramework.UI.Input.RawTouchInputReport.#ctor(nanoFramework.Presentation.PresentationSource,System.DateTime,System.Byte,nanoFramework.UI.TouchInput[],nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="inputSource"></param>
            <param name="timestamp"></param>
            <param name="eventMessage"></param>
            <param name="touches"></param>
            <param name="destTarget"></param>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchInputReport.Target">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchInputReport.EventMessage">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchInputReport.Touches">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.RawTouchActions">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchActions.TouchDown">
            <summary>
             Touch Down
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchActions.TouchUp">
            <summary>
             Touch Up
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchActions.Activate">
            <summary>
             Activate
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchActions.Deactivate">
            <summary>
             Deactivate
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.RawTouchActions.TouchMove">
            <summary>
             Touch Move
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.StagingAreaInputItem">
            <summary>
                This class encapsulates an input event while it is being
                processed by the input manager.
            </summary>
            <remarks>
                This class just provides the dictionary-based storage for
                all of the listeners of the various input manager events.
            </remarks>
        </member>
        <member name="F:nanoFramework.UI.Input.StagingAreaInputItem.Input">
            <summary>
                Returns the input event.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.StagingAreaInputItem.GetData(System.Object)">
            <summary>
                Provides storage for arbitrary data needed during the
                processing of this input event.
            </summary>
            <param name="key">
                An arbitrary key for the data.  This cannot be null.
            </param>
            <returns>
                The data previously set for this key, or null.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Input.StagingAreaInputItem.SetData(System.Object,System.Object)">
            <summary>
                Provides storage for arbitrary data needed during the
                processing of this input event.
            </summary>
            <param name="key">
                An arbitrary key for the data.  This cannot be null.
            </param>
            <param name="value">
                The data to set for this key.  This can be null.
            </param>
        </member>
        <member name="T:nanoFramework.UI.Input.TouchEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:nanoFramework.UI.Input.CaptureMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.CaptureMode.None">
            <summary>
             None
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.CaptureMode.Element">
            <summary>
             Element
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.CaptureMode.SubTree">
            <summary>
             SubTree
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.TouchCapture">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.TouchCapture.Capture(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Input.TouchCapture.Capture(nanoFramework.Presentation.UIElement,nanoFramework.UI.Input.CaptureMode)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <param name="mode"></param>
            <returns></returns>
        </member>
        <member name="P:nanoFramework.UI.Input.TouchCapture.Captured">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.TouchEvents">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.TouchEvents.TouchDownEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.TouchEvents.TouchMoveEvent">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.TouchEvents.TouchUpEvent">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Input.TouchEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Input.TouchEventArgs.Touches">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.TouchEventArgs.#ctor(nanoFramework.UI.Input.InputDevice,System.DateTime,nanoFramework.UI.TouchInput[])">
            <summary>
            
            </summary>
            <param name="inputDevice"></param>
            <param name="timestamp"></param>
            <param name="touches"></param>
        </member>
        <member name="M:nanoFramework.UI.Input.TouchEventArgs.GetPosition(nanoFramework.Presentation.UIElement,System.Int32,System.Int32@,System.Int32@)">
            
        </member>
        <member name="T:nanoFramework.UI.Input.TouchDevice">
            <summary>
                The TouchDevice class represents the stylus/touch device to the
                members of a context.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.TouchDevice.Target">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Input.TouchDevice.DeviceType">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Input.TouchDevice.SetTarget(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:nanoFramework.UI.Bitmap">
            <summary>
            Encapsulates a bitmap, which consists of the pixel data for a graphics image and its methods and attributes
            This class cannot be inherited.The.NET Micro Framework provides the
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.MaxWidth">
            <summary>
            Specifies the maximum width of the display device, in pixels.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.MaxHeight">
            <summary>
            Specifies the maximum height of the display device, in pixels.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.CenterX">
            <summary>
            Represents the x-coordinate location of the center of the display device, in pixels.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.CenterY">
            <summary>
            Represents the y-coordinate location of the center of the display device, in pixels.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.OpacityOpaque">
            These have to be kept in sync with the CLR_GFX_Bitmap::c_DrawText_ flags.
            <summary>
            Specifies that the current bitmap is opaque.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.OpacityTransparent">
            <summary>
            Specifies that the current bitmap is transparent.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.SRCCOPY">
            <summary>
            Copies the source rectangle directly to the destination rectangle.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.PATINVERT">
            <summary>
            Inverts the source rectangle.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DSTINVERT">
            <summary>
            Inverts the destination rectangle.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.BLACKNESS">
            <summary>
            Fills the destination rectangle with the color associated with index number 0 in the physical palette.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.WHITENESS">
            <summary>
            Fills the destination rectangle with the color associated with index number 1 in the physical palette.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DSTGRAY">
            <summary>
            Fills the destination rectangle with a gray color.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DSTLTGRAY">
            <summary>
            Fills the destination rectangle with a light gray color.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DSTDKGRAY">
            <summary>
            Fills the destination rectangle with a dark gray color.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.SINGLEPIXEL">
            <summary>
            Specifies that a circle should have only a single-pixel border and no fill pattern or color.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.RANDOM">
            <summary>
            Fills the destination rectangle or circle with a randomly generated pattern.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_None">
            <summary>
            Specifies that there are no format rules.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_WordWrap">
            <summary>
            Specifies whether a line of bitmap text automatically wraps words to the beginning of the next line when the line reaches its maximum width.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_TruncateAtBottom">
            <summary>
            Specifies that if the bitmap text is larger than the space provided, the text is truncated at the bottom.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_Ellipsis">
            <summary>
            Specifies that the bitmap text is trimmed to the nearest character, and an ellipsis is inserted at the end of each trimmed line.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_IgnoreHeight">
            <summary>
            Specifies that if the bitmap text is larger than the space provided, the text is drawn in its full size, rather than being scaled down to fit the value in the Height property.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_AlignmentLeft">
            <summary>
            Specifies that text is left-aligned as it flows around a bitmap.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_AlignmentCenter">
            <summary>
            Specifies that text is center-aligned as it flows around a bitmap.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_AlignmentRight">
            <summary>
            Specifies that text is right-aligned as it flows around a bitmap.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_AlignmentMask">
            <summary>
            Specifies that you can use a mask to get or set text alignment around a bitmap.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_TrimmingNone">
            <summary>
            Not yet documented.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_TrimmingWordEllipsis">
            <summary>
            Not yet documented.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_TrimmingCharacterEllipsis">
            <summary>
            Not yet documented.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.DT_TrimmingMask">
            <summary>
            Not yet documented.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Bitmap.BitmapImageType">
            <summary>
             Note that these values have to match the c_Type* consts in CLR_GFX_BitmapDescription 
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.BitmapImageType.NanoCLRBitmap">
            <summary>
            A bitmap in a format specific to the nano Framework common language runtine (CLR).
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.BitmapImageType.Gif">
            <summary>
            A bitmap in GIF format.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.BitmapImageType.Jpeg">
            <summary>
            A bitmap in JPEG format.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Bitmap.BitmapImageType.Bmp">
            <summary>
            A bitmap in Windows BMP format.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.#ctor(System.Int32,System.Int32)">
            <summary>
            Encapsulates a bitmap, which consists of the pixel data for a graphics image and its methods and attributes.
            </summary>
            <param name = "width" > The width of the bitmap.</param>
            <param name = "height" > The height of the bitmap.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.#ctor(System.Byte[],nanoFramework.UI.Bitmap.BitmapImageType)">
            <summary>
            Not docummented yet.
            </summary>
            <param name = "imageData" > An array of pixel data for the specified image.</param>
            <param name = "type" > The bitmap type for the specified image.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Flush">
            <summary>
            Flushes the current bitmap to the display device.
            The bitmap must have the same dimensions as the display device.The.NET Micro Framework provides the
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Flush(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Flushes the current bitmap to the display device.
            </summary>
            <param name = "x" > The x-coordinate of the bitmap's upper-left corner.</param>
            <param name = "y" > The y-coordinate of the bitmap's upper-left corner.</param>
            <param name = "width" > The width of the bitmap.</param>
            <param name = "height" > The height of the bitmap.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Clear">
            <summary>
            Clears the entire drawing surface.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawTextInRect(System.String@,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,nanoFramework.Presentation.Media.Color,nanoFramework.UI.Font)">
            <summary>
            Draws text in a specified rectangle.
            Sets the clipping region (clipping rectangle) of a bitmap with a specified coordinate pair (x, y), width, and height.
            </summary>
            <param name = "text" > The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
            <param name = "xRelStart" > The x-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
            <param name = "yRelStart" > The y-coordinate, relative to the rectangle, at which text drawing is to begin.</param>
            <param name = "x" > The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name = "y" > The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name = "width" > The width of the rectangle.</param>
            <param name = "height" > The height of the rectangle.</param>
            <param name = "dtFlags" > Flags that specify the format of the text.</param>
            <param name = "color" > The color to be used for the text.</param>
            <param name = "font" > The font to be used for the text.</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawTextInRect(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32,nanoFramework.Presentation.Media.Color,nanoFramework.UI.Font)">
            <summary>
            <param name = "text" > The text to be drawn. This parameter contains the remaining text, or an empty string, if the complete text string did not fit in the specified rectangle.</param>
            <param name = "x" > The x-coordinate of the upper-left corner of the rectangle.</param>
            <param name = "y" > The y-coordinate of the upper-left corner of the rectangle.</param>
            <param name = "width" > The width of the rectangle.</param>
            <param name = "height" > The height of the rectangle.</param>
            <param name = "dtFlags" > Flags that specify the format of the text.</param>
            <param name = "color" > The color to be used for the text.</param>
            <param name = "font" > The font to be used for the text.</param>
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.SetClippingRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name = "x" > The x-coordinate of the upper-left corner of the clipping rectangle.</param>
            <param name = "y" > The y-coordinate of the upper-left corner of the clipping rectangle.</param>
            <param name = "width" > The width of the clipping rectangle.</param>
            <param name = "height" > The height of the clipping rectangle.</param>
        </member>
        <member name="P:nanoFramework.UI.Bitmap.Width">
            <summary>
            Gets the width of the current bitmap.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Bitmap.Height">
            <summary>
            Gets the height of the current bitmap.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawEllipse(nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.UInt16)">
            <summary>
            Draws an ellipse filled with a specified color gradient.
            </summary>
            <param name = "colorOutline" > The outline color.</param>
            <param name = "thicknessOutline" > The thickness of the ellipse's outline, in pixels.</param>
            <param name = "x" > The x-coordinate location of the center of the ellipse.</param>
            <param name = "y" > The y-coordinate location of the center of the ellipse.</param>
            <param name = "xRadius" > The radius of the ellipse in the x-coordinate direction.</param>
            <param name = "yRadius" > The radius of the ellipse in the y-coordinate direction.</param>
            <param name = "colorGradientStart" > The starting color of the color gradient.</param>
            <param name = "xGradientStart" > The x-coordinate location of the starting point of the color gradient.</param>
            <param name = "yGradientStart" > The y-coordinate location of the starting point of the color gradient.</param>
            <param name = "colorGradientEnd" > The ending color of the color gradient.</param>
            <param name = "xGradientEnd" > The x-coordinate location of the ending point of the color gradient.</param>
            <param name = "yGradientEnd" > The y-coordinate location of the ending point of the color gradient.</param>
            <param name = "opacity" > The opacity of the ellipse.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawEllipse(nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
             <summary>
             Draw and Ellipse
             </summary>
            <param name = "colorOutline" > The outline color.</param>
            <param name = "x" > The x-coordinate location of the center of the ellipse.</param>
            <param name = "y" > The y-coordinate location of the center of the ellipse.</param>
            <param name = "xRadius" > The radius of the ellipse in the x-coordinate direction.</param>
            <param name = "yRadius" > The radius of the ellipse in the y-coordinate direction.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawImage(System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rectangular block of pixels with a specified degree of transparency.
            </summary>
            <param name = "xDst" > The x-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
            <param name = "bitmap" > The source bitmap.</param>
            <param name = "xSrc" > The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
            <param name = "ySrc" > The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
            <param name = "width" > The width of the rectangular block of pixels to be copied.</param>
            <param name = "height" > The height of the rectangular block of pixels to be copied.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawImage(System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
             Draws a rectangular block of pixels with a specified degree of transparency.
            </summary>
            <param name = "xDst" > The x-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate location of the upper-left corner of the rectangular area on the display to which the specified pixels are to be copied.</param>
            <param name = "bitmap" > The source bitmap.</param>
            <param name = "xSrc" > The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
            <param name = "ySrc" > The x-coordinate location of the upper-left corner of the rectangular area in the source bitmap from which the specified pixels are to be copied.</param>
            <param name = "width" > The width of the rectangular block of pixels to be copied.</param>
            <param name = "height" > The height of the rectangular block of pixels to be copied.</param>
            <param name = "opacity" > The degree of opacity of the bitmap. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.RotateImage(System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name = "angle" > The degree of rotation.</param>
            <param name = "xDst" > The x-coordinate of the center? of the destination bitmap.</param>
            <param name = "yDst" > The y-coordinate of the center? of the destination bitmap.</param>
            <param name = "bitmap"></param>                        ?
            <param name = "xSrc" > The x-coordinate of the center? of the source bitmap.</param>
            <param name = "ySrc" > The y-coordinate of the center? of the source bitmap.</param>
            <param name = "width"></param>
            <param name = "height"></param>
            <param name = "opacity"></param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.MakeTransparent(nanoFramework.Presentation.Media.Color)">
            <summary>
            Sets a bitmap's transparent color.
            </summary>
            <param name = "color" > The color to be used as the bitmap's transparent color.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.StretchImage(System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.UInt16)">
            <summary>
            Draws a rectangular block of pixels on the display device, stretching or shrinking the rectangular area as necessary.
            </summary>
            <param name = "xDst" > The x-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "sourceBitmap" > The source bitmap.</param>
            <param name = "width" > The width of the rectangluar area to which the pixels are to be copied.</param>
            <param name = "height" > The height of the rectangluar area to which the pixels are to be copied.</param>
            <param name = "opacity" > The bitmap's degree of opacity. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawLine(nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
             Draws a line on the display device.
            </summary>
            <param name = "color" > The color of the line.</param>
            <param name = "thickness" > The thickness of the line, in pixels.Remark: The thickness parameter is not currently available.For now, all lines are one pixel thick.</param>
            <param name = "x0" > The x-coordinate location of the line's starting point.</param>
            <param name = "y0" > The y-coordinate location of the line's starting point.</param>
            <param name = "x1" > The x-coordinate location of the line's ending point.</param>
            <param name = "y1" > The y-coordinate location of the line's ending point.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawRectangle(nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.UInt16)">
            <summary>
            Draws a rectangle on the display device.
            </summary>
            <param name = "colorOutline" > The color of the rectangle's outline.</param>
            <param name = "thicknessOutline" > The thickness of the rectangle's outline, in pixels.</param>
            <param name = "x" > The x-coordinate of the rectangle's upper-left corner.</param>
            <param name = "y" > The y-coordinate of the rectangle's upper-left corner.</param>
            <param name = "width" > The width of the rectangle, in pixels.</param>
            <param name = "height" > The height of the rectangle, in pixels.</param>
            <param name = "xCornerRadius" > The x-coordinate value of the corner radius used to produce rounded corners on the rectangle.</param>
            <param name = "yCornerRadius" > The y-coordinate value of the corner radius used to produce rounded corners on the rectangle.</param>
            <param name = "colorGradientStart" > The starting color for a color gradient.</param>
            <param name = "xGradientStart" > Holds the x coordinate of the starting location of the color gradient.</param>
            <param name = "yGradientStart" > Holds the y coordinate of the starting location of the color gradient.</param>
            <param name = "colorGradientEnd" > Specifies the ending color of the color gradient.</param>
            <param name = "xGradientEnd" > Holds the x coordinate of the ending location of the color gradient.</param>
            <param name = "yGradientEnd" > Holds the y coordinate of the ending location of the color gradient.</param>
            <param name = "opacity" > Specifies the opacity of the fill color. Set to 0x00 for completely transparent. Set to 0xFF for completely opague.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.DrawText(System.String,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32)">
            <summary>
            Draws text on the display device, using a specified font and color.
            </summary>
            <param name = "text" > The text to be drawn.</param>
            <param name = "font" > The font to be used for the text.</param>
            <param name = "color" > The color to be used for the text.</param>
            <param name = "x" > The x-coordinate of the location where text drawing is to begin.</param>
            <param name = "y" > The y-coordinate of the location where text drawing is to begin.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.SetPixel(System.Int32,System.Int32,nanoFramework.Presentation.Media.Color)">
            <summary>
            Sets the color for a specified pixel.
            </summary>
            <param name = "xPos" > The x-coordinate of the pixel whose color you want to set.</param>
            <param name = "yPos" > The y-coordinate of the pixel whose color you want to set.</param>
            <param name = "color" > The color you want to set for the specified pixel.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.GetPixel(System.Int32,System.Int32)">
            <summary>
            Retrieves the pixel color at a specified location on the display device.
            </summary>
            <param name = "xPos" > The x-coordinate of the pixel whose color you want to get.</param>
            <param name = "yPos" > The y-coordinate of the pixel whose color you want to get.</param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.GetBitmap">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.StretchImage(System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name = "xDst" > The x-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "widthDst" > The width of the rectangluar area to which the pixels are to be copied.</param>
            <param name = "heightDst" > The height of the rectangluar area to which the pixels are to be copied.</param>
            <param name = "bitmap" > The source bitmap.</param>
            <param name="xSrc"></param>
            <param name="ySrc"></param>
            <param name="widthSrc"></param>
            <param name="heightSrc"></param>
            <param name = "opacity" > The bitmap's degree of opacity. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.TileImage(System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name = "xDst" > The x-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "bitmap" > The source bitmap.</param>
            <param name="width"></param>
            <param name="height"></param>
            <param name = "opacity" > The bitmap's degree of opacity. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Scale9Image(System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name = "xDst" > The x-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name = "yDst" > The y-coordinate of the upper-left corner of the rectangular area to which the pixels are to be copied.</param>
            <param name="widthDst"></param>
            <param name="heightDst"></param>
            <param name="bitmap"></param>
            <param name="leftBorder"></param>
            <param name="topBorder"></param>
            <param name="rightBorder"></param>
            <param name="bottomBorder"></param>
            <param name = "opacity" > The bitmap's degree of opacity. A value of 0 (zero) makes the bitmap completely opaque (not transparent at all); a value of 255 makes the bitmap completely transparent.</param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:nanoFramework.UI.Bitmap.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.DisplayOrientation">
            <summary>
            Display orientation. No all display drivers support every orientation.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.DisplayOrientation.PORTRAIT">
            <summary>
            Portrait
            </summary>
        </member>
        <member name="F:nanoFramework.UI.DisplayOrientation.PORTRAIT180">
            <summary>
            Portrait 180
            </summary>
        </member>
        <member name="F:nanoFramework.UI.DisplayOrientation.LANDSCAPE">
            <summary>
            Landscape
            </summary>
        </member>
        <member name="F:nanoFramework.UI.DisplayOrientation.LANDSCAPE180">
            <summary>
            Landscape 180
            </summary>
        </member>
        <member name="T:nanoFramework.UI.DisplayControl">
            <summary>
            Display Control.  
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.MaximumBufferSize">
            <summary>
            The maximum buffer size for Bitmap in bytes.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.Initialize(nanoFramework.UI.SpiConfiguration,nanoFramework.UI.ScreenConfiguration,System.UInt32)">
            <summary>
            Initializes the screen for use with Spi configuration.
            </summary>
            <param name="spi">Spi configuration.</param>
            <param name="screen">A screen configuration.</param>
            <param name="bufferSize">The desired buffer size allocation, 0 for default.</param>
            <remarks>You may have to configure the pins properly for the Spi configuration to be valid before initializing your screen.</remarks>
            <returns>The maximum buffer size possible allocation in bytes.</returns>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.Initialize(nanoFramework.UI.I2cConfiguration,nanoFramework.UI.ScreenConfiguration,System.UInt32)">
            <summary>
            Initializes the screen to use with I2C configuration.
            </summary>
            <param name="i2c"></param>
            <param name="screen">A screen configuration.</param>
            <param name="bufferSize">The desired buffer size allocation, 0 for default.</param>
            <remarks>You may have to configure the pins properly for the I2C configuration to be valid before initializing your screen.</remarks>
            <returns>The maximum buffer size possible allocation in bytes.</returns>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.FullScreen">
            <summary>
            Returns a bitmap the size of the current display. 
            </summary>
            <remarks>Please make sure you check if you have enough memory with IsFullScreenBufferAvailable.
            If you don't have enough, the BitMap won't get initialized and will be null.</remarks>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.IsFullScreenBufferAvailable">
            <summary>
            True if a full size buffer is available
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.LongerSide">
            <summary>
            The screens number of pixels for the longer side.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.ShorterSide">
            <summary>
            The screens number of pixels for the shorter side.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.ScreenWidth">
            <summary>
            The displays number of pixel for the width based on the orientation.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.ScreenHeight">
            <summary>
            The displays number of pixel for the height based on the orientation.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.BitsPerPixel">
            <summary>
            Currently 16 bits in RBG565 format. ( There is some 1 bit code available but untested )
            </summary>
        </member>
        <member name="P:nanoFramework.UI.DisplayControl.Orientation">
            <summary>
            Return the current display orientation landscape, portrait.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.ChangeOrientation(nanoFramework.UI.DisplayOrientation)">
            <summary>
            Change the orientation of the display.
            </summary>
            <remarks>
            When the orientation is changed the display canvas is disposed and recreated with the new dimensions
            when DisplayControl.FullScreen is next called.
            </remarks>
            <param name="Orientation">New Orientation</param>
            <returns>True if the orientation was supported and changed.</returns>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.WritePoint(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Write a point directly on the screen.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="color">The 16 bits color.</param>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.Clear">
            <summary>
            Clears the screen.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.Write(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.UInt16[])">
            <summary>
            Directly write in the screen at coordinate x,y a width,height buffer of 16 bits colors.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width of the area to display.</param>
            <param name="height">The height of the area to display.</param>
            <param name="colors">A 16 bits color</param>
        </member>
        <member name="M:nanoFramework.UI.DisplayControl.Write(System.String,System.UInt16,System.UInt16,System.UInt16,System.UInt16,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color,nanoFramework.Presentation.Media.Color)">
            <summary>
            Directly write on the screen a text at coordinate x,y a width,height with a background and foreground color.
            </summary>
            <param name="text">The text to write.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width of the area to display.</param>
            <param name="height">The height of the area to display.</param>
            <param name="font">The font to use.</param>
            <param name="foreground">Foreground color.</param>
            <param name="background">Background color.</param>
        </member>
        <member name="T:nanoFramework.UI.SpiConfiguration">
            <summary>
            The Spi configuration for the scressn
            </summary>
        </member>
        <member name="M:nanoFramework.UI.SpiConfiguration.#ctor(System.Byte,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Creates a Spi configuration.
            </summary>
            <param name="spiBus">Spi bus.</param>
            <param name="chipselect">Chip select.</param>
            <param name="dataCommand">Data command.</param>
            <param name="reset">Reset.</param>
            <param name="backLight">Back light.</param>
        </member>
        <member name="P:nanoFramework.UI.SpiConfiguration.SpiBus">
            <summary>Z
            Spi bus.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.SpiConfiguration.ChipSelect">
            <summary>
            Chip select.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.SpiConfiguration.DataCommand">
            <summary>
            Data command.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.SpiConfiguration.Reset">
            <summary>
            Reset.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.SpiConfiguration.BackLight">
            <summary>
            Back light
            </summary>
        </member>
        <member name="T:nanoFramework.UI.I2cConfiguration">
            <summary>
            I2C configuration.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.I2cConfiguration.#ctor(System.Byte,System.Byte,System.Boolean)">
            <summary>
            Creates an I2C configuration.
            </summary>
            <param name="i2cBus">I2C bus.</param>
            <param name="address">Address.</param>
            <param name="fastMode">True for I2C fast mode.</param>
        </member>
        <member name="P:nanoFramework.UI.I2cConfiguration.I2cBus">
            <summary>
            I2C bus.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.I2cConfiguration.Address">
            <summary>
            Address.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.I2cConfiguration.FastMode">
            <summary>
            True for I2C fast mode.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.ScreenConfiguration">
            <summary>
            The screen configuration in the driver.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.ScreenConfiguration.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            Creates a screen configuration.
            </summary>
            <param name="x">The x position the screen starts in the driver.</param>
            <param name="y">The y position the screen starts in the driver.</param>
            <param name="width">The width of the screen starts in the driver.</param>
            <param name="height">The height of the screen starts in the driver.</param>
        </member>
        <member name="P:nanoFramework.UI.ScreenConfiguration.X">
            <summary>
            The x position the screen starts in the driver.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.ScreenConfiguration.Y">
            <summary>
            The y position the screen starts in the driver.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.ScreenConfiguration.Width">
            <summary>
            The width of the screen starts in the driver.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.ScreenConfiguration.Height">
            <summary>
            The height of the screen starts in the driver.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Font">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Font.DefaultKerning">
            <summary>
            Contains the default kerning for a particular font.
            The kerning controls the amount of space between consecutive characters in a particular font.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Font.CharWidth(System.Char)">
            <summary>
            Gets the width of the specified character, in pixels.
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="P:nanoFramework.UI.Font.Height">
            <summary>
            Gets the height of the current font, in pixels.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.AverageWidth">
            <summary>
            Gets the average width of the characters in the current font, in pixels.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.MaxWidth">
            <summary>
            Gets the width of the widest character in the current font, in pixels.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.Ascent">
            <summary>
            Gets the ascent measurement for the current font, in pixels.
            A font's ascent is the vertical distance between the font baseline and the top of the font area.
            <returns>The ascent measurement for the current font, in pixels.</returns>
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.Descent">
            <summary>
            Gets the descent measurement for the current font, in pixels.
            A font's descent is the vertical distance between the font baseline and the bottom of the font area.
            <returns>The descent measurement for the current font, in pixels.</returns>
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.InternalLeading">
            <summary>
            Gets the internal leading measurement for the current font, in pixels.
            <returns>The internal leading measurement for the current font, in pixels.</returns>
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Font.ExternalLeading">
            <summary>
            Gets the external leading measurement for the current font, in pixels.
            <returns>The external leading measurement for the current font, in pixels.</returns>
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)">
            <summary>
            Computes the width, height, and kerning of a specified line of text.
            </summary>
            <param name = "text" > The text you want to measure.</param>
            <param name = "width" > The width of the specified text.</param>
            <param name = "height" > The height of the specified text.</param>
        </member>
        <member name="M:nanoFramework.UI.Font.ComputeExtent(System.String,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            
            </summary>
            <param name = "text" > The text you want to measure.</param>
            <param name = "width" > The width of the specified text.</param>
            <param name = "height" > The height of the specified text.</param>
            <param name = "kerning" > The spacing between consecutive characters.</param>
        </member>
        <member name="M:nanoFramework.UI.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)">
            <summary>
            Computes the size of the rectangular area on the display device needed to render the specified text string.
            </summary>
            <param name = "text" > The text you want to render on the display device.</param>
            <param name = "renderWidth" > The width, in pixels, of the rectangular area needed to render the text.</param>
            <param name = "renderHeight" > The height, in pixels, of the rectangular area needed to render the text.</param>
        </member>
        <member name="M:nanoFramework.UI.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)">
            <summary>
            Computes the size of the rectangular area on the display device needed to render the specified text string.
            </summary>
            <param name = "text" > The text you want to render on the display device.</param>
            <param name = "renderWidth" > The width, in pixels, of the rectangular area needed to render the text.</param>
            <param name = "renderHeight" > The height, in pixels, of the rectangular area needed to render the text.</param>
            <param name = "availableWidth" > The maximum width of text that will fit in the defined rectangular area.</param>
        </member>
        <member name="M:nanoFramework.UI.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt32)">
            <summary>
            Computes the size of the rectangular area on the display device needed to render the specified text string.
            </summary>
            <param name = "text" > The text you want to render on the display device.</param>
            <param name = "renderWidth" > The width, in pixels, of the rectangular area needed to render the text.</param>
            <param name = "renderHeight" > The height, in pixels, of the rectangular area needed to render the text.</param>
            <param name = "xRelStart" > The x-coordinate of the relative starting point for the text.</param>
            <param name = "yRelStart" > The y-coordinate of the relative starting point for the text.</param>
            <param name = "availableWidth" > The maximum width of text that will fit in the defined rectangular area.</param>
            <param name = "availableHeight" > The maximum height of text that will fit in the defined rectangular area.</param>
            <param name = "dtFlags" > Flags that specify various text characteristics, such as alignment.</param>
        </member>
        <member name="T:nanoFramework.UI.Ink">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Ink.SetInkRegion(System.UInt32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap)">
            <summary>
            
            </summary>
            <param name="flags"></param>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="borderWidth"></param>
            <param name="color"></param>
            <param name="penWidth"></param>
            <param name="bitmap"></param>
        </member>
        <member name="M:nanoFramework.UI.Ink.ResetInkRegion">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.CollectionMethod">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CollectionMethod.Managed">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CollectionMethod.Native">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.CollectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CollectionMode.InkOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CollectionMode.GestureOnly">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CollectionMode.InkAndGesture">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchCollector.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchCollectorConfiguration">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.UI.TouchCollectorConfiguration.CollectionMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.UI.TouchCollectorConfiguration.CollectionMethod">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.UI.TouchCollectorConfiguration.SamplingFrequency">
            <summary>
            Sampling rate per second. Setting 50 will result 50 touch samples in a second.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchCollectorConfiguration.GetLastTouchPoint(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:nanoFramework.UI.TouchCollectorConfiguration.TouchMoveFrequency">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchCollectorConfiguration.TouchInput">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchCollectorConfiguration.TouchInput.LastTouchPoint">
            <summary>
            param1- X, param2-Y, param3-unused.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchCollectorConfiguration.TouchInput.SamplingDistance">
            <summary>
            param1- Distance in micro seconds.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchCollectorConfiguration.TouchInput.TouchMoveFrequency">
            <summary>
            param1- frequency per second.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchCollectorConfiguration.GetTouchInput(nanoFramework.UI.TouchCollectorConfiguration.TouchInput,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="param3"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchCollectorConfiguration.SetTouchInput(nanoFramework.UI.TouchCollectorConfiguration.TouchInput,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="flag"></param>
            <param name="param1"></param>
            <param name="param2"></param>
            <param name="param3"></param>
        </member>
        <member name="T:nanoFramework.UI.Temporary">
            <summary>
            Temporary class to extend the EventCatory enum found in the nanoFramework.Runtime.Events
             Need to merge these into this class update references and remove this file
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Temporary.EventCategoryEx">
            <summary>
             Temporary enum with unique values within the EventCategory enum range found in nanoFramework.Runtime.Events
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Temporary.EventCategoryEx.Touch">
            <summary>
            Specifies a Touch Event
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Temporary.EventCategoryEx.Gesture">
            <summary>
            Specifies a Gesture Event
            </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchInputFlags">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInputFlags.None">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInputFlags.Primary">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInputFlags.Pen">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInputFlags.Palm">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchMessages">
            
             IMPORTANT - This must be in sync with code in PAL and also nanoFramework
            
             <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchMessages.Down">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchMessages.Up">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchMessages.Move">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchInput">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.X">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.Y">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.SourceID">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.Flags">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.ContactWidth">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchInput.ContactHeight">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchEvent">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchEvent.Time">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchEvent.Touches">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchScreenEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreenEventArgs.Touches">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreenEventArgs.TimeStamp">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreenEventArgs.Target">
            <summary>  </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchScreenEventArgs.#ctor(System.DateTime,nanoFramework.UI.TouchInput[],System.Object)">
            <summary>
            
            </summary>
            <param name="timestamp"></param>
            <param name="touches"></param>
            <param name="target"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchScreenEventArgs.GetPosition(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="touchIndex"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:nanoFramework.UI.TouchScreenEventHandler">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchGesture">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.NoGesture">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Begin">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.End">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Right">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.UpRight">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Up">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.UpLeft">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Left">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.DownLeft">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Down">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.DownRight">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Tap">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.DoubleTap">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Zoom">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Pan">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Rotate">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.TwoFingerTap">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.Rollover">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGesture.UserDefined">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchGestureEventArgs">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGestureEventArgs.Timestamp">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGestureEventArgs.Gesture">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGestureEventArgs.X">
            <note> X and Y form the center location of the gesture for multi-touch or the starting location for single touch </note>
             <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGestureEventArgs.Y">
            <summary>  </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchGestureEventArgs.Arguments">
            <note>2 bytes for gesture-specific arguments.
            TouchGesture.Zoom: Arguments = distance between fingers
            TouchGesture.Rotate: Arguments = angle in degrees (0-360)
            </note>
            <summary>  </summary>
        </member>
        <member name="P:nanoFramework.UI.TouchGestureEventArgs.Angle">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchGestureEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchEventProcessor.ProcessEvent(System.UInt32,System.UInt32,System.DateTime)">
            <summary>
            
            </summary>
            <param name="data1"></param>
            <param name="data2"></param>
            <param name="time"></param>
            <returns></returns>
        </member>
        <member name="T:nanoFramework.UI.Touch">
            <summary>  </summary>
        </member>
        <member name="M:nanoFramework.UI.Touch.Initialize(nanoFramework.Runtime.Events.IEventListener)">
            <summary>
            
            </summary>
            <param name="touchEventListener"></param>
        </member>
        <member name="P:nanoFramework.UI.Touch.ActiveTouchPanel">
            <summary>  </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchPanel">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchPanel.SetCalibration(System.Int32,System.Int16[],System.Int16[],System.Int16[],System.Int16[])">
            <summary>
            
            </summary>
            <param name="cCalibrationPoints"></param>
            <param name="screenXBuffer"></param>
            <param name="screenYBuffer"></param>
            <param name="uncalXBuffer"></param>
            <param name="uncalYBuffer"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchPanel.GetCalibrationPointCount(System.Int32@)">
            <summary>
            
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchPanel.StartCalibration">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchPanel.GetCalibrationPoint(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:nanoFramework.UI.TouchScreen">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.TouchScreen.ActiveRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchScreen.ActiveRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Object)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="target"></param>
        </member>
        <member name="M:nanoFramework.UI.TouchScreen.ActiveRectangle.Contains(nanoFramework.UI.TouchInput)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="F:nanoFramework.UI.TouchScreen.ActiveRectangle.X">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreen.ActiveRectangle.Y">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreen.ActiveRectangle.Width">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreen.ActiveRectangle.Height">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.TouchScreen.ActiveRectangle.Target">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.TouchScreen.#ctor(nanoFramework.UI.TouchScreen.ActiveRectangle[])">
            <summary>
            
            </summary>
            <param name="activeRectangles"></param>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnTouchDown">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnTouchMove">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnTouchUp">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnGestureStarted">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnGestureChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.UI.TouchScreen.OnGestureEnded">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.UI.TouchScreen.ActiveRegions">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Application">
            <summary>
            Application base class
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.#ctor">
            <summary>
                Initializes a new instance of the Application class.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.Run">
            <summary>
                 Run is called to start an application.
            
                 Typically a developer will do some setting of properties/attaching to events after instantiating an application object,
                 and then call Run() to start the application.
            </summary>
            <remarks>
                 Once run has been called - an application's OnStartup override and Startup event is called
                 immediately afterwards.
            </remarks>
             <returns>ExitCode of the application</returns>
        </member>
        <member name="M:nanoFramework.UI.Application.Run(nanoFramework.Presentation.Window)">
            <summary>
                 Run is called to start an application.
            
                 Typically a developer will do some setting of properties/attaching to events after instantiating an application object,
                 and then call Run() to start the application.
            </summary>
            <remarks>
                 Once run has been called - an application's OnStartup override and Startup event is called
                 immediately afterwards.
            </remarks>
             <param name="window">Window that will be added to the Windows property and made the MainWindow of the Applcation.
             The passed Window must be created on the same thread as the Application object.  Furthermore, this Window is
             shown once the Application is run.</param>
        </member>
        <member name="M:nanoFramework.UI.Application.Shutdown">
             <summary>
                 Shutdown is called to programmatically shutdown an application.
            
                 Once shutdown() is called, the application gets called with the
                 OnShutdown method to raise the Shutdown event.
             </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.InitializeForEventSource">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.OnEvent(nanoFramework.Runtime.Events.BaseEvent)">
            <summary>
            
            </summary>
            <param name="ev"></param>
            <returns></returns>
        </member>
        <member name="P:nanoFramework.UI.Application.Current">
            <summary>
                The Current property enables the developer to always get to the application in
                AppDomain in which they are running.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Application.Windows">
            <summary>
                The Windows property exposes a WindowCollection object, from which a developer
                can iterate over all the windows that have been opened in the current application.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Application.MainWindow">
             <summary>
                 The MainWindow property indicates the primary window of the application.
             </summary>
             <remarks>
                 By default - MainWindow will be set to the first window opened in the application.
                 However the MainWindow may be set programmatically to indicate "this is my main window".
                 It is a recommended programming style to refer to MainWindow in code instead of Windows[0].
            
             </remarks>
        </member>
        <member name="P:nanoFramework.UI.Application.ShutdownMode">
             <summary>
                 The ShutdownMode property is called to set the shutdown specific mode of
                 the application. Setting this property controls the way in which an application
                 will shutdown.
                     The three values for the ShutdownMode enum are :
                             OnLastWindowClose
                             OnMainWindowClose
                             OnExplicitShutdown
            
                     OnLastWindowClose - this mode will shutdown the application when  the
                                         last window is closed, or an explicit call is made
                                         to Application.Shutdown(). This is the default mode.
            
                     OnMainWindowClose - this mode will shutdown the application when the main
                                         window has been closed, or Application.Shutdown() is
                                         called. Note that if the MainWindow property has not
                                         been set - this mode is equivalent to OnExplicitOnly.
            
                     OnExplicitShutdown- this mode will shutdown the application only when an
                                         explicit call to OnShutdown() has been made.
             </summary>
        </member>
        <member name="E:nanoFramework.UI.Application.Startup">
            <summary>
                The Startup event is fired when an application is starting.
                This event is raised by the OnStartup method.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Application.Exit">
            <summary>
            The Exit event is fired when an application is shutting down.
            This event is raised by the OnExit method.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.OnStartup(System.EventArgs)">
            <summary>
                OnStartup is called to raise the Startup event. The developer will typically override this method
                if they want to take action at startup time ( or they may choose to attach an event).
                This method will be called once when the application begins, once that application's Run() method
                has been called.
            </summary>
            <remarks>
                This method follows the .Net programming guideline of having a protected virtual method
                that raises an event, to provide a convenience for developers that subclass the event.
                If you override this method - you need to call Base.OnStartup(...) for the corresponding event
                to be raised.
            </remarks>
            <param name="e">The event args that will be passed to the Startup event</param>
        </member>
        <member name="M:nanoFramework.UI.Application.OnExit(System.EventArgs)">
            <summary>
                OnExit is called to raise the Exit event.
                The developer will typically override this method if they want to take
                action when the application exits  ( or they may choose to attach an event).
            </summary>
            <remarks>
                This method follows the .Net programming guideline of having a protected virtual method
                that raises an event, to provide a convenience for developers that subclass the event.
                If you override this method - you need to call Base.OnExit(...) for the
                corresponding event to be raised.
            </remarks>
            <param name="e">The event args that will be passed to the Exit event</param>
        </member>
        <member name="M:nanoFramework.UI.Application.DoShutdown">
            <summary>
            DO NOT USE - internal method
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.ShutdownCallback(System.Object)">
            <summary>
            This method gets called on dispatch of the Shutdown DispatcherOperationCallback
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Application.DefaultContextExceptionHandler(System.Object,System.Exception)">
            <summary>
            This DispatcherException event handler creates the default UI
            </summary>
        </member>
        <member name="T:nanoFramework.UI.ShutdownMode">
            <summary>
                Enum for ShutdownMode
            </summary>
        </member>
        <member name="F:nanoFramework.UI.ShutdownMode.OnLastWindowClose">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.UI.ShutdownMode.OnMainWindowClose">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.UI.ShutdownMode.OnExplicitShutdown">
             <summary>
            
             </summary>
        </member>
        <member name="T:nanoFramework.UI.ReasonSessionEnding">
            <summary>
                Enum for ReasonSessionEnding
            </summary>
        </member>
        <member name="F:nanoFramework.UI.ReasonSessionEnding.Logoff">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.UI.ReasonSessionEnding.Shutdown">
             <summary>
            
             </summary>
        </member>
        <member name="T:nanoFramework.UI.CancelEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.UI.CancelEventArgs.Cancel">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.UI.EventRoute">
             <summary>
                 Container for the route to be followed
                 by a RoutedEvent when raised
             </summary>
             <remarks>
                 EventRoute constitues <para/>
                 a non-null <see cref="F:nanoFramework.UI.EventRoute.RoutedEvent"/>
                 and <para/>
                 an ordered list of (target object, handler list)
                 pairs <para/>
                 <para/>
            
                 It facilitates adding new entries to this list
                 and also allows for the handlers in the list
                 to be invoked
             </remarks>
        </member>
        <member name="M:nanoFramework.UI.EventRoute.#ctor(nanoFramework.UI.RoutedEvent)">
            <summary>
                Constructor for <see cref="T:nanoFramework.UI.EventRoute"/> given
                the associated <see cref="F:nanoFramework.UI.EventRoute.RoutedEvent"/>
            </summary>
            <param name="routedEvent">
                Non-null <see cref="F:nanoFramework.UI.EventRoute.RoutedEvent"/> to be associated with
                this <see cref="T:nanoFramework.UI.EventRoute"/>
            </param>
        </member>
        <member name="M:nanoFramework.UI.EventRoute.Add(System.Object,nanoFramework.UI.RoutedEventHandler,System.Boolean)">
            <summary>
                Adds this handler for the
                specified target to the route
            </summary>
            <remarks>
                NOTE: It is not an error to add a
                handler for a particular target instance
                twice (handler will simply be called twice).
            </remarks>
            <param name="target">
                Target object whose handler is to be
                added to the route
            </param>
            <param name="handler">
                Handler to be added to the route
            </param>
            <param name="handledEventsToo">
                Flag indicating whether or not the listener wants to
                hear about events that have already been handled
            </param>
        </member>
        <member name="M:nanoFramework.UI.EventRoute.InvokeHandlers(System.Object,nanoFramework.UI.RoutedEventArgs)">
             <summary>
                 Invokes all the handlers that have been
                 added to the route
             </summary>
             <remarks>
                 NOTE: If the <see cref="T:nanoFramework.UI.RoutingStrategy"/>
                 of the associated <see cref="F:nanoFramework.UI.EventRoute.RoutedEvent"/>
                 is <see cref="F:nanoFramework.UI.RoutingStrategy.Bubble"/>
                 the last handlers added are the
                 last ones invoked <para/>
                 However if the <see cref="T:nanoFramework.UI.RoutingStrategy"/>
                 of the associated <see cref="F:nanoFramework.UI.EventRoute.RoutedEvent"/>
                 is <see cref="F:nanoFramework.UI.RoutingStrategy.Tunnel"/>,
                 the last handlers added are the
                 first ones invoked.
                 However the handlers for a particular object
                 are always invoked in the order they were added
                 regardless of whether its a tunnel or buble.
            
             </remarks>
             <param name="source">
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Source"/>
                 that raised the RoutedEvent
             </param>
             <param name="args">
                 <see cref="T:nanoFramework.UI.RoutedEventArgs"/> that carry
                 all the details specific to this RoutedEvent
             </param>
        </member>
        <member name="T:nanoFramework.UI.Mathematics">
            <summary>
            Simple Min/Max for the wpf measures
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Mathematics.Max(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Mathematics.Min(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.Mathematics.Abs(System.Int32)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <returns></returns>
        </member>
        <member name="T:nanoFramework.UI.PropertyChangedEventArgs">
            <summary>
                Provides data for the various property changed events.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.PropertyChangedEventArgs.#ctor(System.String,System.Object,System.Object)">
            <summary>
                Initializes a new instance of the PropertyChangedEventArgs class.
            </summary>
            <param name="property">
                The property whose value changed.
            </param>
            <param name="oldValue">
                The value of the property before the change.
            </param>
            <param name="newValue">
                The value of the property after the change.
            </param>
        </member>
        <member name="F:nanoFramework.UI.PropertyChangedEventArgs.Property">
            <summary>
                The property whose value changed.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.PropertyChangedEventArgs.OldValue">
            <summary>
                The value of the property before the change.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.PropertyChangedEventArgs.NewValue">
            <summary>
                The value of the property after the change.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.PropertyChangedEventHandler">
            <summary>
                Represents the method that will handle the event raised when a
                Property is changed
            </summary>
        </member>
        <member name="T:nanoFramework.UI.RoutedEvent">
             <summary>
                 RoutedEvent is a unique identifier for
                 any registered RoutedEvent
             </summary>
             <remarks>
                 RoutedEvent constitutes the
                cref="RoutedEvent.Name"
                cref="RoutedEvent.RoutingStrategy"
                cref="RoutedEvent.HandlerType"
                cref="RoutedEvent.OwnerType"
            
                 NOTE: None of the members can be null
             </remarks>
             <ExternalAPI/>
        </member>
        <member name="P:nanoFramework.UI.RoutedEvent.Name">
            <summary>
                Returns the Name of the RoutedEvent
            </summary>
            <remarks>
                RoutedEvent Name is unique within the
                OwnerType (super class types not considered
                when talking about uniqueness)
            </remarks>
            <ExternalAPI/>
        </member>
        <member name="P:nanoFramework.UI.RoutedEvent.RoutingStrategy">
            <summary>
                Returns the <see cref="P:nanoFramework.UI.RoutedEvent.RoutingStrategy"/>
                of the RoutedEvent
            </summary>
            <ExternalAPI/>
        </member>
        <member name="P:nanoFramework.UI.RoutedEvent.HandlerType">
            <summary>
                Returns Type of Handler for the RoutedEvent
            </summary>
            <remarks>
                HandlerType is a type of delegate
            </remarks>
            <ExternalAPI/>
        </member>
        <member name="M:nanoFramework.UI.RoutedEvent.ToString">
            <summary>
               String representation
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEvent.#ctor(System.String,nanoFramework.UI.RoutingStrategy,System.Type)">
             <summary>
             Create a new routed event.
            
             You have to promise not to duplicate another event name in the system,
             or you will be sorry.
             </summary>
             <param name="name"></param>
             <param name="routingStrategy"></param>
             <param name="handlerType"></param>
        </member>
        <member name="P:nanoFramework.UI.RoutedEvent.GlobalIndex">
            <summary>
               Index for this event
            </summary>
        </member>
        <member name="T:nanoFramework.UI.RoutedEventArgs">
             <summary>
                 The container for all state associated
                 with a RoutedEvent
             </summary>
             <remarks>
                 <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
                 constitutes the <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/>, <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Handled"/>, <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Source"/> and <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.OriginalSource"/> <para/>
                 <para/>
            
                 Different <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
                 can be used with a single <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/> <para/>
                 <para/>
            
                 The <see cref="T:nanoFramework.UI.RoutedEventArgs"/> is responsible
                 for packaging the <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/>,
                 providing extra event state info, and invoking the
                 handler associated with the RoutedEvent
             </remarks>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventArgs.#ctor">
             <summary>
                 Constructor for <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
             </summary>
             <remarks>
                 All members take default values <para/>
                 <para/>
            
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/>
                 defaults to null <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Handled"/> defaults to
                 false <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Source"/> defaults to null <para/>
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.OriginalSource"/> also defaults to null
                 <para/>
             </remarks>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventArgs.#ctor(nanoFramework.UI.RoutedEvent)">
            <summary>
                Constructor for <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
            </summary>
            <param name="routedEvent">The new value that the RoutedEvent Property is being set to </param>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventArgs.#ctor(nanoFramework.UI.RoutedEvent,System.Object)">
            <summary>
                Constructor for <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
            </summary>
            <param name="source">The new value that the SourceProperty is being set to </param>
            <param name="routedEvent">The new value that the RoutedEvent Property is being set to </param>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent">
            <summary>
                Returns the <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/> associated
                with this <see cref="T:nanoFramework.UI.RoutedEventArgs"/>
            </summary>
            <remarks>
                The <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/> cannot be null
                at any time
            </remarks>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventArgs.Handled">
            <summary>
                Returns a boolean flag indicating if or not this
                RoutedEvent has been handled this far in the route
            </summary>
            <remarks>
                Initially starts with a false value before routing
                has begun
            </remarks>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventArgs.Source">
            <summary>
                Returns Source object that raised the RoutedEvent
            </summary>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventArgs.OriginalSource">
            <summary>
                Returns OriginalSource object that raised the RoutedEvent
            </summary>
            <remarks>
                Always returns the OriginalSource object that raised the
                RoutedEvent unlike <see cref="P:nanoFramework.UI.RoutedEventArgs.Source"/>
                that may vary under specific scenarios <para/>
                This property acquires its value once before the event
                handlers are invoked and never changes then on
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventArgs.OnSetSource(System.Object)">
            <summary>
                Invoked when the source of the event is set
            </summary>
            <remarks>
                Changing the source of an event can often
                require updating the data within the event.
                For this reason, the OnSource=  method is
                protected virtual and is meant to be
                overridden by sub-classes of
                <see cref="T:nanoFramework.UI.RoutedEventArgs"/> <para/>
                Also see <see cref="P:nanoFramework.UI.RoutedEventArgs.Source"/>
            </remarks>
            <param name="source">
                The new value that the SourceProperty is being set to
            </param>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventArgs.InvokeHandler(nanoFramework.UI.RouteItem)">
            <summary>
                Invokes the handler associated with the specified RouteItem
            </summary>
            <param name="routeItem">
                RouteItem containing handler and target
            </param>
        </member>
        <member name="T:nanoFramework.UI.RoutedEventHandler">
            <summary>
                RoutedEventHandler Definition
            </summary>
            <ExternalAPI/>
        </member>
        <member name="T:nanoFramework.UI.RoutedEventHandlerInfo">
             <summary>
                 Container for handler instance and other
                 invocation preferences for this handler
                 instance
             </summary>
             <remarks>
                 RoutedEventHandlerInfo constitutes the
                 handler instance and flag that indicates if
                 or not this handler must be invoked for
                 already handled events <para/>
                 <para/>
            
                 This class needs to be public because it is
                 used by ContentElement in the Framework
                 to store Instance EventHandlers
             </remarks>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.#ctor(nanoFramework.UI.RoutedEventHandler,System.Boolean)">
            <summary>
                Construtor for RoutedEventHandlerInfo
            </summary>
            <param name="handler">
                Non-null handler
            </param>
            <param name="handledEventsToo">
                Flag that indicates if or not the handler must
                be invoked for already handled events
            </param>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventHandlerInfo.Handler">
            <summary>
                Returns associated handler instance
            </summary>
        </member>
        <member name="P:nanoFramework.UI.RoutedEventHandlerInfo.InvokeHandledEventsToo">
            <summary>
                Returns HandledEventsToo Flag
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.Equals(System.Object)">
            <summary>
                Is the given object equivalent to the current one
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.Equals(nanoFramework.UI.RoutedEventHandlerInfo)">
            <summary>
                Is the given RoutedEventHandlerInfo equals the current
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.GetHashCode">
            <summary>
                Serves as a hash function for a particular type, suitable for use in
                hashing algorithms and data structures like a hash table
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.op_Equality(nanoFramework.UI.RoutedEventHandlerInfo,nanoFramework.UI.RoutedEventHandlerInfo)">
            <summary>
                Equals operator overload
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RoutedEventHandlerInfo.op_Inequality(nanoFramework.UI.RoutedEventHandlerInfo,nanoFramework.UI.RoutedEventHandlerInfo)">
            <summary>
                NotEquals operator overload
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RouteItem.Equals(System.Object)">
            <summary>
                Is the given object equals the current
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RouteItem.Equals(nanoFramework.UI.RouteItem)">
            <summary>
                Is the given RouteItem equals the current
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RouteItem.GetHashCode">
            <summary>
                Serves as a hash function for a particular type, suitable for use in
                hashing algorithms and data structures like a hash table
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RouteItem.op_Equality(nanoFramework.UI.RouteItem,nanoFramework.UI.RouteItem)">
            <summary>
                Equals operator overload
            </summary>
        </member>
        <member name="M:nanoFramework.UI.RouteItem.op_Inequality(nanoFramework.UI.RouteItem,nanoFramework.UI.RouteItem)">
            <summary>
                NotEquals operator overload
            </summary>
        </member>
        <member name="T:nanoFramework.UI.RoutingStrategy">
            <summary>
                Routing Strategy can be either of
                Tunnel or Bubble
            </summary>
            <ExternalAPI/>
        </member>
        <member name="F:nanoFramework.UI.RoutingStrategy.Tunnel">
            <summary>
                Tunnel
            </summary>
            <remarks>
                Route the event starting at the root of
                the visual tree and ending with the source
            </remarks>
        </member>
        <member name="F:nanoFramework.UI.RoutingStrategy.Bubble">
            <summary>
                Bubble
            </summary>
            <remarks>
                Route the event starting at the source
                and ending with the root of the visual tree
            </remarks>
        </member>
        <member name="F:nanoFramework.UI.RoutingStrategy.Direct">
            <summary>
                Direct
            </summary>
            <remarks>
                Raise the event at the source only.
            </remarks>
        </member>
        <member name="T:nanoFramework.UI.WindowCollection">
            <summary>
            WindowCollection can be used to interate over all the windows that have been
            opened in the current application.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.WindowCollection.#ctor">
            <summary>
            Default Constructor
            </summary>
        </member>
        <member name="P:nanoFramework.UI.WindowCollection.Item(System.Int32)">
            <summary>
            Overloaded [] operator to access the WindowCollection list
            </summary>
        </member>
        <member name="M:nanoFramework.UI.WindowCollection.GetEnumerator">
            <summary>
            GetEnumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.UI.WindowCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            CopyTo
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="M:nanoFramework.UI.WindowCollection.CopyTo(nanoFramework.Presentation.Window[],System.Int32)">
            <summary>
            CopyTo
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="P:nanoFramework.UI.WindowCollection.Count">
            <summary>
            Count property
            </summary>
        </member>
        <member name="P:nanoFramework.UI.WindowCollection.IsSynchronized">
            <summary>
            IsSynchronized
            </summary>
        </member>
        <member name="P:nanoFramework.UI.WindowCollection.SyncRoot">
            <summary>
            SyncRoot
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.Dispatcher">
            <summary>
                Provides UI services for a thread.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.Dispatcher.CurrentDispatcher">
            <summary>
            Returns the Dispatcher for the current thread.
            </summary>
            <value>Dispatcher</value>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.FromThread(System.Threading.Thread)">
            <summary>
                Returns the Dispatcher for the specified thread.
            </summary>
            <remarks>
                If there is no dispatcher available for the specified thread,
                this method will return null.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.CheckAccess">
            <summary>
                Checks that the calling thread has access to this object.
            </summary>
            <remarks>
                Only the dispatcher thread may access DispatcherObjects.
                <p/>
                This method is public so that any thread can probe to
                see if it has access to the DispatcherObject.
            </remarks>
            <returns>
                True if the calling thread has access to this object.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.VerifyAccess">
            <summary>
                Verifies that the calling thread has access to this object.
            </summary>
            <remarks>
                Only the dispatcher thread may access DispatcherObjects.
                <p/>
                This method is public so that derived classes can probe to
                see if the calling thread has access to itself.
            </remarks>
        </member>
        <member name="P:nanoFramework.UI.Threading.Dispatcher.Thread">
            <summary>
            Thread for the dispatcher.
            </summary>
            <value></value>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.InvokeShutdown">
            <summary>
                Begins the process of shutting down the dispatcher, synchronously.
                The process may complete asynchronously, since we may be
                nested in dispatcher frames.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.Dispatcher.HasShutdownStarted">
            <summary>
                Whether or not the dispatcher is shutting down.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.Dispatcher.HasShutdownFinished">
            <summary>
                Whether or not the dispatcher has been shut down.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Threading.Dispatcher.ShutdownStarted">
            <summary>
                Raised when the dispatcher starts shutting down.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Threading.Dispatcher.ShutdownFinished">
            <summary>
                Raised when the dispatcher is shut down.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.Run">
            <summary>
                Push the main execution frame.
            </summary>
            <remarks>
                This frame will continue until the dispatcher is shut down.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.PushFrame(nanoFramework.UI.Threading.DispatcherFrame)">
            <summary>
                Push an execution frame.
            </summary>
            <param name="frame">
                The frame for the dispatcher to process.
            </param>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.BeginInvoke(nanoFramework.UI.Threading.DispatcherOperationCallback,System.Object)">
            <summary>
                Executes the specified delegate asynchronously with the specified
                arguments, on the thread that the Dispatcher was created on.
            </summary>
            <param name="method">
                A delegate to a method that takes parameters of the same number
                and type that are contained in the args parameter.
            </param>
            <param name="args">
                An object to pass as the argument to the given method.
                This can be null if no arguments are needed.
            </param>
            <returns>
                A DispatcherOperation object that represents the result of the
                BeginInvoke operation.  null if the operation could not be queued.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Threading.Dispatcher.Invoke(System.TimeSpan,nanoFramework.UI.Threading.DispatcherOperationCallback,System.Object)">
            <summary>
                Executes the specified delegate synchronously with the specified
                arguments, on the thread that the Dispatcher was created on.
            </summary>
            <param name="timeout">
                The maximum amount of time to wait for the operation to complete.
            </param>
            <param name="method">
                A delegate to a method that takes parameters of the same number
                and type that are contained in the args parameter.
            </param>
            <param name="args">
                An object to pass as the argument to the given method.
                This can be null if no arguments are needed.
            </param>
            <returns>
                The return value from the delegate being invoked, or null if
                the delegate has no return value or if the operation was aborted.
            </returns>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherExceptionEventHandler">
            <summary>
              Delegate for processing exceptions that happen during Invoke or BeginInvoke.
              Return true if the exception was processed.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherOperationCallback">
            <summary>
              A convenient delegate to use for dispatcher operations.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherFrame">
            <summary>
                Representation of Dispatcher frame.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherFrame.#ctor">
            <summary>
                Constructs a new instance of the DispatcherFrame class.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherFrame.#ctor(System.Boolean)">
            <summary>
                Constructs a new instance of the DispatcherFrame class.
            </summary>
            <param name="exitWhenRequested">
                Indicates whether or not this frame will exit when all frames
                are requested to exit.
                <p/>
                Dispatcher frames typically break down into two categories:
                1) Long running, general purpose frames, that exit only when
                   told to.  These frames should exit when requested.
                2) Short running, very specific frames that exit themselves
                   when an important criteria is met.  These frames may
                   consider not exiting when requested in favor of waiting
                   for their important criteria to be met.  These frames
                   should have a timeout associated with them.
            </param>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherFrame.Continue">
            <summary>
                Indicates that this dispatcher frame should exit.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherObject">
            <summary>
                A DispatcherObject is an object associated with a
                <see cref="F:nanoFramework.UI.Threading.DispatcherObject.Dispatcher"/>.  A DispatcherObject instance should
                only be access by the dispatcher's thread.
            </summary>
            <remarks>
                Subclasses of <see cref="T:nanoFramework.UI.Threading.DispatcherObject"/> should enforce thread
                safety by calling <see cref="M:nanoFramework.UI.Threading.DispatcherObject.VerifyAccess"/> on all their public
                methods to ensure the calling thread is the appropriate thread.
                <para/>
                DispatcherObject cannot be independently instantiated; that is,
                all constructors are protected.
            </remarks>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherObject.CheckAccess">
            <summary>
                Checks that the calling thread has access to this object.
            </summary>
            <remarks>
                Only the dispatcher thread may access DispatcherObjects.
                <p/>
                This method is public so that any thread can probe to
                see if it has access to the DispatcherObject.
            </remarks>
            <returns>
                True if the calling thread has access to this object.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherObject.VerifyAccess">
             <summary>
                 Verifies that the calling thread has access to this object.
             </summary>
             <remarks>
                 Only the dispatcher thread may access DispatcherObjects.
                 <p/>
                 This method is public so that derived classes can probe to
                 see if the calling thread has access to itself.
            
                 This is only verified in debug builds.
             </remarks>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherObject.#ctor">
            <summary>
                Instantiate this object associated with the current Dispatcher.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherObject.#ctor(System.Boolean)">
            <summary>
                Instantiate this object associated with the current Dispatcher.
            </summary>
            <param name="canBeUnbound">
                Whether or not the object can be detached from any Dispatcher.
            </param>
        </member>
        <member name="F:nanoFramework.UI.Threading.DispatcherObject.Dispatcher">
            <summary>
                The <see cref="F:nanoFramework.UI.Threading.DispatcherObject.Dispatcher"/> that this
                <see cref="T:nanoFramework.UI.Threading.DispatcherObject"/> is associated with.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherOperation">
            <summary>
                DispatcherOperation represents a delegate that has been
                posted to the Dispatcher queue.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherOperation.Dispatcher">
            <summary>
                Returns the Dispatcher that this operation was posted to.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherOperation.Status">
            <summary>
                The status of this operation.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherOperation.Wait">
            <summary>
                Waits for this operation to complete.
            </summary>
            <returns>
                The status of the operation.  To obtain the return value
                of the invoked delegate, use the the Result property.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherOperation.Wait(System.TimeSpan)">
            <summary>
                Waits for this operation to complete.
            </summary>
            <param name="timeout">
                The maximum amount of time to wait.
            </param>
            <returns>
                The status of the operation.  To obtain the return value
                of the invoked delegate, use the the Result property.
            </returns>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherOperation.Abort">
            <summary>
                Aborts this operation.
            </summary>
            <returns>
                False if the operation could not be aborted (because the
                operation was already in  progress)
            </returns>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherOperation.Result">
            <summary>
                Returns the result of the operation if it has completed.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Threading.DispatcherOperation.Aborted">
            <summary>
                An event that is raised when the operation is aborted.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Threading.DispatcherOperation.Completed">
            <summary>
                An event that is raised when the operation completes.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherOperationStatus">
             <summary>
                 An enumeration describing the status of a DispatcherOperation.
             </summary>
            
        </member>
        <member name="F:nanoFramework.UI.Threading.DispatcherOperationStatus.Pending">
            <summary>
                The operation is still pending.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Threading.DispatcherOperationStatus.Aborted">
            <summary>
                The operation has been aborted.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Threading.DispatcherOperationStatus.Completed">
            <summary>
                The operation has been completed.
            </summary>
        </member>
        <member name="F:nanoFramework.UI.Threading.DispatcherOperationStatus.Executing">
            <summary>
                The operation has started executing, but has not completed yet.
            </summary>
        </member>
        <member name="T:nanoFramework.UI.Threading.DispatcherTimer">
            <summary>
                A timer that is integrated into the Dispatcher queues, and will
                be processed after a given amount of time
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.#ctor">
            <summary>
                Creates a timer that uses the current thread's Dispatcher to
                process the timer event
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.#ctor(nanoFramework.UI.Threading.Dispatcher)">
            <summary>
                Creates a timer that uses the specified Dispatcher to
                process the timer event.
            </summary>
            <param name="dispatcher">
                The dispatcher to use to process the timer.
            </param>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherTimer.Dispatcher">
            <summary>
                Gets the dispatcher this timer is associated with.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherTimer.IsEnabled">
            <summary>
                Gets or sets whether the timer is running.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherTimer.Interval">
            <summary>
                Gets or sets the time between timer ticks.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.Start">
            <summary>
                Starts the timer.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.Stop">
            <summary>
                Stops the timer.
            </summary>
        </member>
        <member name="E:nanoFramework.UI.Threading.DispatcherTimer.Tick">
            <summary>
                Occurs when the specified timer interval has elapsed and the
                timer is enabled.
            </summary>
        </member>
        <member name="P:nanoFramework.UI.Threading.DispatcherTimer.Tag">
            <summary>
                Any data that the caller wants to pass along with the timer.
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.Close">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.UI.Threading.DispatcherTimer.Dispose(System.Boolean)">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Border">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Border.BorderBrush">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.GetBorderThickness(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.SetBorderThickness(System.Int32)">
            <summary>
            
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.SetBorderThickness(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arrangeWidth"></param>
            <param name="arrangeHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Border.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Canvas">
            <summary>
            
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.GetBottom(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.SetBottom(nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.GetLeft(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.SetLeft(nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="left"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.GetRight(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.SetRight(nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="right"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.GetTop(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.SetTop(nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            
            </summary>
            <param name="e"></param>
            <param name="top"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arrangeWidth"></param>
            <param name="arrangeHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Canvas.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ContentControl">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ContentControl.Child">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ContentControl.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Control">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Control.Background">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Control.Font">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Control.Foreground">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Control.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Control._background">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Control._foreground">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Control._font">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Dock">
            <summary>
            Dock - Enum which describes how to position and stretch the child of a DockPanel.
            </summary> 
            <seealso cref="T:nanoFramework.Presentation.Controls.DockPanel" />
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Dock.Left">
            <summary>
            Position this child at the left of the remaining space. 
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Dock.Top">
            <summary> 
            Position this child at the top of the remaining space.
            </summary> 
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Dock.Right">
            <summary> 
            Position this child at the right of the remaining space.
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Dock.Bottom">
            <summary>
            Position this child at the bottom of the remaining space. 
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.DockPanel">
            <summary> 
            DockPanel is used to size and position children inward from the edges of available space.
            
            A <see cref="T:nanoFramework.Presentation.Controls.Dock" /> enum (see <see cref="M:nanoFramework.Presentation.Controls.DockPanel.SetDock(nanoFramework.Presentation.UIElement,nanoFramework.Presentation.Controls.Dock)" /> and <see cref="M:nanoFramework.Presentation.Controls.DockPanel.GetDock(nanoFramework.Presentation.UIElement)" />) 
            determines on which size a child is placed.  Children are stacked in order from these edges until
            there is no more space; this happens when previous children have consumed all available space, or a child 
            with Dock set to Fill is encountered.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.DockPanel.ArrangeOverride(System.Int32,System.Int32)">
            <summary> 
            DockPanel computes a position and final size for each of its children based upon their <see cref="T:nanoFramework.Presentation.Controls.Dock" /> enum and sizing properties. 
            </summary> 
            <param name="arrangeWidth">Width that DockPanel will assume to position children.</param>
            <param name="arrangeHeight">Height that DockPanel will assume to position children.</param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.DockPanel.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Updates DesiredSize of the DockPanel.
            Called by parent UIElement.
            This is the first pass of layout.
            </summary>
            <param name="availableWidth">An "upper limit" that the return value should not exceed.</param>
            <param name="availableHeight">An "upper limit" that the return value should not exceed.</param>
            <param name="desiredWidth">The Panel's desired width.</param>
            <param name="desiredHeight">The Panel's desired height.</param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.DockPanel.GetDock(nanoFramework.Presentation.UIElement)">
            <summary> 
            Reads the pseudo-attached property Dock from the given element.
            </summary> 
            <param name="element">UIElement from which to read the pseudo-attached property.</param>
            <returns>The property's value.</returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.DockPanel.SetDock(nanoFramework.Presentation.UIElement,nanoFramework.Presentation.Controls.Dock)">
            <summary>
            Writes the pseudo-attached property Dock to the given element. 
            </summary>
            <param name="element">UIElement to which to write the attached property.</param> 
            <param name="dock">The property value to set.</param> 
        </member>
        <member name="P:nanoFramework.Presentation.Controls.DockPanel.LastChildFill">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Image">
            <summary>
            Summary description for Image.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Image.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Image.#ctor(nanoFramework.UI.Bitmap)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Image.Bitmap">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Image.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Image.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.DrawingAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.DrawingAttributes.Color">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.InkCanvas">
            <summary>
            Note: InkCanvas control is not movable at runtime. This requires complex logic, with
            no customer scenario at this moment.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.Finalize">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.OnTouchDown(nanoFramework.UI.Input.TouchEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.OnTouchUp(nanoFramework.UI.Input.TouchEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.Init(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="borderWidth"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.InkCanvas.DefaultDrawingAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.InkCanvas.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.InkCanvas._defaultDrawingAttributes">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.InkCanvas._bitmap">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ListBox">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.Items">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.Controls.ListBox.SelectionChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.SelectedItem">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBox.ScrollIntoView(nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBox.OnButtonDown(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:nanoFramework.Presentation.Controls.ListBox.ScrollChanged">
            <summary>
            Event handler if the scroll changes.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.HorizontalOffset">
            <summary>
            Horizontal offset of the scroll.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.VerticalOffset">
            <summary>
            Vertical offset of the scroll.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.ExtentHeight">
            <summary>
            Extent height of the scroll area.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.ExtentWidth">
            <summary>
            Extent width of the scroll area.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBox.ScrollingStyle">
            <summary>
            The scrolling style.
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ListBoxItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItem.IsSelected">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItem.IsSelectable">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItem.OnIsSelectedChanged(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isSelected"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ListBoxItemCollection">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.#ctor(nanoFramework.Presentation.Controls.ListBox,nanoFramework.Presentation.UIElementCollection)">
            <summary>
            
            </summary>
            <param name="listBox"></param>
            <param name="items"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Add(nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Add(nanoFramework.Presentation.UIElement)">
            <summary>
            
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Contains(nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItemCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.IndexOf(nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Insert(System.Int32,nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.Remove(nanoFramework.Presentation.Controls.ListBoxItem)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItemCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItemCollection.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ListBoxItemCollection.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ListBoxItemCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Orientation.Horizontal">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Orientation.Vertical">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Panel">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Panel.Children">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Panel.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ScrollChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollChangedEventArgs.HorizontalChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollChangedEventArgs.HorizontalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollChangedEventArgs.VerticalChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollChangedEventArgs.VerticalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollChangedEventArgs.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="offsetX"></param>
            <param name="offsetY"></param>
            <param name="offsetChangeX"></param>
            <param name="offsetChangeY"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ScrollChangedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ScrollingStyle">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollingStyle.First">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollingStyle.LineByLine">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollingStyle.PageByPage">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.ScrollingStyle.Last">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.ScrollViewer">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.Controls.ScrollViewer.ScrollChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.HorizontalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.VerticalOffset">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.ExtentHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.ExtentWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.LineWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.LineHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.ScrollViewer.ScrollingStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arrangeWidth"></param>
            <param name="arrangeHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.LineDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.LineLeft">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.LineRight">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.LineUp">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.PageDown">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.PageLeft">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.PageRight">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.PageUp">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.ScrollViewer.OnButtonDown(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.SelectionChangedEventArgs">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.SelectionChangedEventArgs.PreviousSelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.SelectionChangedEventArgs.SelectedIndex">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.SelectionChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="previousIndex"></param>
            <param name="newIndex"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.SelectionChangedEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="args"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.StackPanel">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.StackPanel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.StackPanel.#ctor(nanoFramework.Presentation.Controls.Orientation)">
            <summary>
            
            </summary>
            <param name="orientation"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.StackPanel.Orientation">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.StackPanel.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.StackPanel.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="arrangeWidth"></param>
            <param name="arrangeHeight"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.Text">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Text.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Text.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Text.#ctor(nanoFramework.UI.Font,System.String)">
            <summary>
            
            </summary>
            <param name="font"></param>
            <param name="content"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.Font">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.TextContent">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.Trimming">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.TextAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.LineHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.Text.TextWrap">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Text.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.Text.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Text._font">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.Text._text">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.TextFlow">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextFlow.TextRuns">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextFlow.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextFlow.ScrollingStyle">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextFlow.TextAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextFlow.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextFlow.OnButtonDown(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextFlow.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextFlow.TopLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextFlow.LineCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.TextRun">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextRun.Text">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextRun.Font">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextRun.ForeColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextRun._width">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Controls.TextRun._height">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRun.#ctor(System.String,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="foreColor"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextRun.EndOfLine">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRun.GetSize(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.TextRunCollection">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextRunCollection.Count">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Add(System.String,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="foreColor"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Add(nanoFramework.Presentation.Controls.TextRun)">
            <summary>
            
            </summary>
            <param name="textRun"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Contains(nanoFramework.Presentation.Controls.TextRun)">
            <summary>
            
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.IndexOf(nanoFramework.Presentation.Controls.TextRun)">
            <summary>
            
            </summary>
            <param name="run"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Insert(System.Int32,nanoFramework.Presentation.Controls.TextRun)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="run"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.Remove(nanoFramework.Presentation.Controls.TextRun)">
            <summary>
            
            </summary>
            <param name="run"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.RemoveAt(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextRunCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextRunCollection.IsSynchronized">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            
            </summary>
            <param name="array"></param>
            <param name="index"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.TextRunCollection.SyncRoot">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.TextRunCollection.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:nanoFramework.Presentation.Controls.WrapPanel">
             <summary>
             WrapPanel is used to place child UIElements at sequential positions from left to the right 
             and then "wrap" the lines of children from top to the bottom.
            
             All children get the layout partition of size ItemWidth x ItemHeight.
             </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Controls.WrapPanel.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
            <see cref="M:nanoFramework.Presentation.UIElement.ArrangeOverride(System.Int32,System.Int32)"/> 
            </summary> 
        </member>
        <member name="M:nanoFramework.Presentation.Controls.WrapPanel.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            <see cref="M:nanoFramework.Presentation.UIElement.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)"/>
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.WrapPanel.ItemWidth">
            <summary> 
            The ItemWidth and ItemHeight properties specify the size of all items in the WrapPanel.
            Note that children of WrapPanel may have their own Width/Height properties set - the ItemWidth/ItemHeight 
            specifies the size of "layout partition" reserved by WrapPanel for the child.
            If this property is not set (equal to 0) - the size of layout 
            partition is equal to DesiredSize of the child element.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.WrapPanel.ItemHeight">
            <summary> 
            The ItemWidth and ItemHeight properties specify the size of all items in the WrapPanel.
            Note that children of WrapPanel may have their own Width/Height properties set - the ItemWidth/ItemHeight 
            specifies the size of "layout partition" reserved by WrapPanel for the child.
            If this property is not set (equal to 0) - the size of layout 
            partition is equal to DesiredSize of the child element.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Controls.WrapPanel.Orientation">
            <summary>
            Specifies dimension of children positioning in absence of wrapping. 
            Wrapping occurs in orthogonal direction. For example, if Orientation is Horizontal,
            the items try to form horizontal rows first and if needed are wrapped and form vertical stack of rows. 
            If Orientation is Vertical, items first positioned in a vertical column, and if there is 
            not enough space - wrapping creates additional columns in horizontal dimension.
            </summary> 
        </member>
        <member name="T:nanoFramework.Presentation.HorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.HorizontalAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.HorizontalAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.HorizontalAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.HorizontalAlignment.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.Brush">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Media.Brush.Opacity">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.Brush.RenderRectangle(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="outline"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.Brush.RenderEllipse(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="outline"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="xRadius"></param>
            <param name="yRadius"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.Brush.RenderPolygon(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32[])">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="outline"></param>
            <param name="pts"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.BrushMappingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.BrushMappingMode.Absolute">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.BrushMappingMode.RelativeToBoundingBox">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.ColorUtility">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ColorUtility.ColorFromRGB(System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ColorUtility.GetRValue(nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ColorUtility.GetGValue(nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ColorUtility.GetBValue(nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ColorUtility.To16Bpp(nanoFramework.Presentation.Media.Color)">
            <summary>
            Converts color into a 16bit representation.
            </summary>
            <param name="color">A color.</param>
            <returns>a 16 bit encoded representation.</returns>
        </member>
        <member name="T:nanoFramework.Presentation.Media.Color">
            <summary>
             Note: Colors are not RGB 24-bit but are BGR 24-bit
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.AliceBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.AntiqueWhite">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Aqua">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Aquamarine">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Azure">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Beige">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Bisque">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Black">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.BlanchedAlmond">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Blue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.BlueViolet">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Brown">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.BurlyWood">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.CadetBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Chartreuse">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Chocolate">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Coral">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.CornflowerBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Cornsilk">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Crimson">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Cyan">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkCyan">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkGoldenrod">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkKhaki">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkMagenta">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkOliveGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkOrange">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkOrchid">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkRed">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkSalmon">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkSeaGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkSlateBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkSlateGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkTurquoise">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DarkViolet">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DeepPink">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DeepSkyBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DimGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.DodgerBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Firebrick">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.FloralWhite">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.ForestGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Gainsboro">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.GhostWhite">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Gold">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Goldenrod">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Gray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Green">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.GreenYellow">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Honeydew">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.HotPink">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.IndianRed">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Indigo">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Ivory">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Khaki">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Lavender">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LavenderBlush">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LawnGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LemonChiffon">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightCoral">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightCyan">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightGoldenrodYellow">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightPink">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightSalmon">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightSeaGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightSkyBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightSlateGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightSteelBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LightYellow">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Lime">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.LimeGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Linen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Magenta">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Maroon">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumAquamarine">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumOrchid">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumPurple">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumSeaGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumSlateBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumSpringGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumTurquoise">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MediumVioletRed">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MidnightBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MintCream">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.MistyRose">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Moccasin">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.NavajoWhite">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Navy">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.OldLace">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Olive">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.OliveDrab">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Orange">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.OrangeRed">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Orchid">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PaleGoldenrod">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PaleGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PaleTurquoise">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PaleVioletRed">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PapayaWhip">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PeachPuff">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Peru">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Pink">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Plum">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.PowderBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Purple">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Red">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.RosyBrown">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.RoyalBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SaddleBrown">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Salmon">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SandyBrown">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SeaGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SeaShell">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Sienna">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Silver">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SkyBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SlateBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SlateGray">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Snow">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SpringGreen">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.SteelBlue">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Tan">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Teal">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Thistle">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Tomato">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Turquoise">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Violet">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Wheat">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.White">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.WhiteSmoke">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.Yellow">
             <summary>
            
             </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Color.YellowGreen">
             <summary>
            
             </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.Constants">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Constants.MaxExtent">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.DrawingContext">
            <summary>
            Drawing Context.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.#ctor(nanoFramework.UI.Bitmap)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.Translate(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.GetTranslation(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Media.DrawingContext.Bitmap">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.Clear">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawPolygon(nanoFramework.Presentation.Media.Brush,nanoFramework.Presentation.Media.Pen,System.Int32[])">
            <summary>
            
            </summary>
            <param name="brush"></param>
            <param name="pen"></param>
            <param name="pts"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.SetPixel(nanoFramework.Presentation.Media.Color,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawLine(nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="x0"></param>
            <param name="y0"></param>
            <param name="x1"></param>
            <param name="y1"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawEllipse(nanoFramework.Presentation.Media.Brush,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="brush"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="xRadius"></param>
            <param name="yRadius"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawImage(nanoFramework.UI.Bitmap,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawImage(nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationX"></param>
            <param name="destinationY"></param>
            <param name="sourceX"></param>
            <param name="sourceY"></param>
            <param name="sourceWidth"></param>
            <param name="sourceHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.BlendImage(nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="destinationX"></param>
            <param name="destinationY"></param>
            <param name="sourceX"></param>
            <param name="sourceY"></param>
            <param name="sourceWidth"></param>
            <param name="sourceHeight"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.RotateImage(System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="angle"></param>
            <param name="destinationX"></param>
            <param name="destinationY"></param>
            <param name="bitmap"></param>
            <param name="sourceX"></param>
            <param name="sourceY"></param>
            <param name="sourceWidth"></param>
            <param name="sourceHeight"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.StretchImage(System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="widthDst"></param>
            <param name="heightDst"></param>
            <param name="bitmap"></param>
            <param name="xSrc"></param>
            <param name="ySrc"></param>
            <param name="widthSrc"></param>
            <param name="heightSrc"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.TileImage(System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="bitmap"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.Scale9Image(System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.UI.Bitmap,System.Int32,System.Int32,System.Int32,System.Int32,System.UInt16)">
            <summary>
            
            </summary>
            <param name="xDst"></param>
            <param name="yDst"></param>
            <param name="widthDst"></param>
            <param name="heightDst"></param>
            <param name="bitmap"></param>
            <param name="leftBorder"></param>
            <param name="topBorder"></param>
            <param name="rightBorder"></param>
            <param name="bottomBorder"></param>
            <param name="opacity"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawText(System.String,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="color"></param>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawText(System.String@,nanoFramework.UI.Font,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32,nanoFramework.Presentation.Media.TextAlignment,nanoFramework.Presentation.Media.TextTrimming)">
            <summary>
            
            </summary>
            <param name="text"></param>
            <param name="font"></param>
            <param name="color"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="alignment"></param>
            <param name="trimming"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.GetClippingRectangle(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.PushClippingRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.PopClippingRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.DrawRectangle(nanoFramework.Presentation.Media.Brush,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="brush"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Media.DrawingContext.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Media.DrawingContext.Height">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.DrawingContext.Dispose(System.Boolean)">
            <summary>
            
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.ImageBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.ImageBrush.BitmapSource">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.ImageBrush.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ImageBrush.#ctor(nanoFramework.UI.Bitmap)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.ImageBrush.RenderRectangle(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.LinearGradientBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.StartColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.EndColor">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.MappingMode">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.StartX">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.StartY">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.EndX">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.EndY">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.LinearGradientBrush.RelativeBoundingBoxSize">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.LinearGradientBrush.#ctor(nanoFramework.Presentation.Media.Color,nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="startColor"></param>
            <param name="endColor"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.LinearGradientBrush.#ctor(nanoFramework.Presentation.Media.Color,nanoFramework.Presentation.Media.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="startColor"></param>
            <param name="endColor"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.LinearGradientBrush.RenderRectangle(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.MediaContext">
            <summary>
            The MediaContext class controls the rendering
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.MediaContext.#ctor">
            <summary>
            The MediaContext lives in the Dispatcher and is the MediaSystem's class that keeps
            per Dispatcher state.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.MediaContext.From(nanoFramework.UI.Threading.Dispatcher)">
            <summary>
            Gets the MediaContext from the context passed in as argument.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.MediaContext.PostRender">
            <summary>
            If there is already a render operation in the Dispatcher queue, this
            method will do nothing.  If not, it will add a
            render operation.
            </summary>
            <remarks>
            This method should only be called when a render is necessary "right
            now."  Events such as a change to the visual tree would result in
            this method being called.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.Media.MediaContext.RenderMessageHandler(System.Object)">
            <summary>
            This is the standard RenderMessageHandler callback, posted via PostRender()
            and Resize().  This wraps RenderMessageHandlerCore and emits an ETW events
            to trace its execution.
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.MediaContext._currentRenderOp">
            <summary>
            Message delegate.
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.MediaContext._isRendering">
            <summary>
            Indicates that we are in the middle of processing a render message.
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.Pen">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Pen.Color">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Pen.Thickness">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.Pen.#ctor(nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.Pen.#ctor(nanoFramework.Presentation.Media.Color,System.UInt16)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="thickness"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.SolidColorBrush">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.SolidColorBrush.Color">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.SolidColorBrush.#ctor(nanoFramework.Presentation.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.SolidColorBrush.RenderRectangle(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Media.SolidColorBrush.RenderEllipse(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="bmp"></param>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="xRadius"></param>
            <param name="yRadius"></param>
        </member>
        <member name="F:nanoFramework.Presentation.Media.SolidColorBrush.LineSegment.dx">
            <summary>
            We will use Bresenham alg for line calc.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Media.SolidColorBrush.RenderPolygon(nanoFramework.UI.Bitmap,nanoFramework.Presentation.Media.Pen,System.Int32[])">
            <summary>
            Basic algorithm uses scan lines to fill the polygon.
            No multiplication or division is needed, neither is floating point calculation.
            </summary>
            <param name="bmp"></param>
            <param name="outline"></param>
            <param name="pts"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Media.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Stretch.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.Stretch.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.TextAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextAlignment.Left">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextAlignment.Right">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Media.TextTrimming">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextTrimming.CharacterEllipsis">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextTrimming.None">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Media.TextTrimming.WordEllipsis">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.PresentationSource">
             <summary>
             Presentation source is our connection to the rest of the managed system.
            
             </summary>
        </member>
        <member name="M:nanoFramework.Presentation.PresentationSource.#ctor">
            <summary>
                Constructs an instance of the PresentationSource object.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.PresentationSource.RootUIElement">
            <summary>
            The Root UIElement for this source.
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Ellipse">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Ellipse.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="xRadius"></param>
            <param name="yRadius"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Ellipse.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Shapes.Direction.TopToBottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Shapes.Direction.BottomToTop">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Line">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Line.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Line.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="dx"></param>
            <param name="dy"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Shapes.Line.Direction">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Line.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Polygon">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Polygon.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Polygon.#ctor(System.Int32[])">
            <summary>
            
            </summary>
            <param name="pts"></param>
        </member>
        <member name="P:nanoFramework.Presentation.Shapes.Polygon.Points">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Polygon.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Rectangle.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Rectangle.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.Shapes.Rectangle.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.Shapes.Shape">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Shapes.Shape.Fill">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Shapes.Shape.Stroke">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.SizeToContent">
            <summary>
            SizeToContent
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.SizeToContent.Manual">
            <summary>
            Does not size to content
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.SizeToContent.Width">
            <summary>
            Sizes Width to content's Width
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.SizeToContent.Height">
            <summary>
            Sizes Height to content's Height
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.SizeToContent.WidthAndHeight">
            <summary>
            Sizes both Width and Height to content's size
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.UIElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnGenericEvent(nanoFramework.UI.Input.GenericEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchDown(nanoFramework.UI.Input.TouchEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchUp(nanoFramework.UI.Input.TouchEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchMove(nanoFramework.UI.Input.TouchEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchGestureStarted(nanoFramework.UI.TouchGestureEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchGestureChanged(nanoFramework.UI.TouchGestureEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnTouchGestureEnded(nanoFramework.UI.TouchGestureEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnPreviewButtonDown(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnButtonDown(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnPreviewButtonUp(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnButtonUp(nanoFramework.UI.Input.ButtonEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnGotFocus(nanoFramework.UI.Input.FocusChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnLostFocus(nanoFramework.UI.Input.FocusChangedEventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchDown">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchUp">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchMove">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchGestureStart">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchGestureChanged">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.TouchGestureEnd">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetDesiredSize(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetMargin(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.SetMargin(System.Int32)">
            <summary>
            
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.SetMargin(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="top"></param>
            <param name="right"></param>
            <param name="bottom"></param>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.ActualWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.ActualHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.Width">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetLayoutOffset(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetRenderSize(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.LogicalChildren">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnChildrenChanged(nanoFramework.Presentation.UIElement,nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            OnChildrenChanged is called when the UIElementCollection of the UIElement is edited.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.IsFocused">
            <summary>
                A property indicating if the button is focused on this
                element or not.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.PropagateSuspendLayout(nanoFramework.Presentation.UIElement)">
            <summary>
            Recursively propagates IsLayoutSuspended flag down to the whole v's sub tree.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.PropagateResumeLayout(nanoFramework.Presentation.UIElement)">
            <summary>
            Recursively resets IsLayoutSuspended flag on all visuals of the whole v's sub tree.
            For UIElements also re-inserts the UIElement into Measure and / or Arrange update queues
            if necessary.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.Measure(System.Int32,System.Int32)">
            <summary>
            Updates DesiredSize of the UIElement. Must be called by parents from their MeasureOverride, to form recursive update.
            This is first pass of layout update.
            </summary>
            <remarks>
            Measure is called by parents on their children. Internally, Measure calls MeasureOverride override on the same object,
            giving it opportunity to compute its DesiredSize.<para/>
            This method will return immediately if child is not Dirty, previously measured
            and availableSize is the same as cached. <para/>
            This method also resets the IsMeasureinvalid bit on the child.<para/>
            In case when "unbounded measure to content" is needed, parent can use availableSize
            as double.PositiveInfinity. Any returned size is OK in this case.
            </remarks>
            <param name="availableWidth">Available width that parent can give to the child. May be MaxValue (when parent wants to
            measure to content). This is soft constraint. Child can return bigger size to indicate that it wants bigger space and hope
            that parent can throw in scrolling...</param>
            <param name="availableHeight">Available height that parent can give to the child. May be MaxValue (when parent wants to
            measure to content). This is soft constraint. Child can return bigger size to indicate that it wants bigger space and hope
            that parent can throw in scrolling...</param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.Arrange(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Parents or system call this method to arrange the internals of children on a second pass of layout update.
            </summary>
            <remarks>
            This method internally calls ArrangeOverride override, giving the derived class opportunity
            to arrange its children and/or content using final computed size.
            In their ArrangeOverride overrides, derived class is supposed to create its visual structure and
            prepare itself for rendering. Arrange is called by parents
            from their implementation of ArrangeOverride or by system when needed.
            This method sets Bounds=finalSize before calling ArrangeOverride.
            </remarks>
            <param name="finalRectX">This is the final X location that parent or system wants this UIElement to assume.</param>
            <param name="finalRectY">This is the final Y location that parent or system wants this UIElement to assume.</param>
            <param name="finalRectWidth">This is the Width that parent or system wants this UIElement to assume.</param>
            <param name="finalRectHeight">This is the height that parent or system wants this UIElement to assume.</param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
             <summary>
             Measurement override. Implement your size-to-content logic here.
             </summary>
             <remarks>
             MeasureOverride is designed to be the main customizability point for size control of layout.
             UIElement authors should override this method, call Measure on each child UIElement,
             and compute their desired size based upon the measurement of the children.
             The return value should be the desired size.<para/>
             Note: It is required that a parent UIElement calls Measure on each child or they won't be sized/arranged.
             Typical override follows a pattern roughly like this (pseudo-code):
             <example>
                 <code lang="C#">
             <![CDATA[
            
             protected override void MeasureOverride(int avialableWidth, int availableHeight, out int desiredWidth, out int desiredHeight)
             {
                 foreach (UIElement child in VisualChildren)
                 {
                     child.Measure(availableSize);
                     availableSize.Deflate(child.DesiredSize);
                     _cache.StoreInfoAboutChild(child);
                 }
            
                 Size desired = CalculateBasedOnCache(_cache);
                 return desired;
             }
             ]]>
                 </code>
             </example>
             The key aspects of this snippet are:
                 <list type="bullet">
             <item>You must call Measure on each child UIElement</item>
             <item>It is common to cache measurement information between the MeasureOverride and ArrangeOverride method calls</item>
             <item>Calling base.MeasureOverride is not required.</item>
             <item>Calls to Measure on children are passing either the same availableSize as the parent, or a subset of the area depending
             on the type of layout the parent will perform (for example, it would be valid to remove the area
             for some border or padding).</item>
                 </list>
             </remarks>
             <param name="availableWidth">Available size that parent can give to the child. May be MaxValue(when parent wants to
             measure to content). This is soft constraint. Child can return bigger size to indicate that it wants bigger space and hope
             that parent can throw in scrolling...</param>
             <param name="availableHeight"></param>
             <param name="desiredWidth"></param>
             <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.ArrangeOverride(System.Int32,System.Int32)">
             <summary>
             ArrangeOverride allows for the customization of the final sizing and positioning of children.
             </summary>
             <remarks>
             UIElement authors should override this method, call Arrange on each visible child UIElement,
             to size and position each child UIElement by passing a rectangle reserved for the child within parent space.
             Note: It is required that a parent UIElement calls Arrange on each child or they won't be rendered.
             Typical override follows a pattern roughly like this (pseudo-code):
             <example>
                 <code lang="C#">
             <![CDATA[
            
             protected override void ArrangeOverride(int arrangeWidth, int arrangeHeight)
             {
            
                 foreach (UIElement child in VisualChildren)
                 {
                     child.Arrange(new Rect(childX, childY, childWidth, childHeight);
                 }
             }
             ]]>
                 </code>
             </example>
             </remarks>
             <param name="arrangeWidth">Final width</param>
             <param name="arrangeHeight">Final height</param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.UpdateLayout">
            <summary>
            Call this method to ensure that the whoel subtree of elements that includes this UIElement
            is properly updated.
            </summary>
            <remarks>
            This ensures that UIElements with IsMeasureInvalid or IsArrangeInvalid will
            get call to their MeasureOverride and ArrangeOverride, and all computed sizes will be validated.
            This method does nothing if layout is clean but it does work if layout is not clean so avoid calling
            it after each change in the UIElement tree. It makes sense to either never call it (system will do this
            in a deferred manner) or only call it if you absolutely need updated sizes and positions after you do all changes.
            </remarks>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.IsMeasureValid">
            <summary>
            Determines if the DesiredSize is valid.
            </summary>
            <remarks>
            A developer can force arrangement to be invalidated by calling InvalidateMeasure.
            IsArrangeValid and IsMeasureValid are related,
            in that arrangement cannot be valid without measurement first being valid.
            </remarks>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.IsArrangeValid">
            <summary>
            Determines if the RenderSize and position of child elements is valid.
            </summary>
            <remarks>
            A developer can force arrangement to be invalidated by calling InvalidateArrange.
            IsArrangeValid and IsMeasureValid are related, in that arrangement cannot be valid without measurement first
            being valid.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.ChildElementFromPoint(System.Int32,System.Int32)">
            <summary>
            Given x, y co-ordinates of the parent UIElement,
            find the child control that is directly underneath that point.
            If there are multiple such controls, the one that was created/inserted
            into the list last wins. This is because we don't have explicit z-ordering
            right now.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetUnclippedSize(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.ContainsPoint(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetPointerTarget(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.PointToScreen(System.Int32@,System.Int32@)">
            <summary>
            We are deviating little from their desktop counter parts, mostly for simplicity and perf.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.PointToClient(System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.InvalidateMeasure">
            <summary>
            Invalidates the measurement state for the UIElement.
            This has the effect of also invalidating the arrange state for the UIElement.
            The UIElement will be queued for an update layout that will occur asynchronously.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.InvalidateArrange">
            <summary>
            Invalidates the arrange state for the UIElement.
            The UIElement will be queued for an update layout that will occur asynchronously.
            MeasureOverride will not be called unless InvalidateMeasure is also called - or that something
            else caused the measure state to be invalidated.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.Parent">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.RootUIElement">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.GetIsRootElement">
            <summary>
            The CompositionTarget marks the root element. The root element is responsible
            for posting renders. This method is also used to ensure that the Visual is not
            used in multiple CompositionTargets.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.HorizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.VerticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnChildDesiredSizeChanged(nanoFramework.Presentation.UIElement)">
            <summary>
            Notification that is called by Measure of a child when
            it ends up with different desired size for the child.
            </summary>
            <remarks>
            Default implementation simply calls invalidateMeasure(), assuming that layout of a
            parent should be updated after child changed its size.<para/>
            Finer point: this method can only be called in the scenario when the system calls Measure on a child,
            not when parent calls it since if parent calls it, it means parent has dirty layout and is recalculating already.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.OnRender(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.Visibility">
            <summary>
                Visibility accessor
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.IsVisible">
            <summary>
                A property indicating if this element is Visible or not.
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.IsVisibleChanged">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.IsEnabled">
            <summary>
                Fetches the value of the IsEnabled property
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.UIElement.IsEnabledChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.RenderRecursive(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.InvalidateRect(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="w"></param>
            <param name="h"></param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.Invalidate">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.RaiseEvent(nanoFramework.UI.RoutedEventArgs)">
             <summary>
                 Raise the events specified by
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.RoutedEvent"/>
             </summary>
             <remarks>
                 This method is a shorthand for
                 This method walks up the visual tree, calling
                 cref="UIElement.BuildRouteCore"
                 on every cref="UIElement"
            
                 NOTE: The RoutedEvent in RoutedEventArgs
                 and EventRoute must be matched
            
                 Once the route is built, it calls InvokeHandlers()
             </remarks>
             <param name="args">
                 <see cref="T:nanoFramework.UI.RoutedEventArgs"/> for the event to
                 be raised
             </param>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.AddToEventRoute(nanoFramework.UI.EventRoute,nanoFramework.UI.RoutedEventArgs)">
            <summary>
                Add the event handlers for this element to the route.
            </summary>
            <param name="route"></param>
            <param name="args"></param>
        </member>
        <member name="P:nanoFramework.Presentation.UIElement.InstanceEventHandlersStore">
            <summary>
            Ensure the store has been created.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElement.AddHandler(nanoFramework.UI.RoutedEvent,nanoFramework.UI.RoutedEventHandler,System.Boolean)">
             <summary>
                 Adds a routed event handler for the particular
                 <see cref="T:nanoFramework.UI.RoutedEvent"/>
             </summary>
             <remarks>
                 The handler added thus is also known as
                 an instance handler <para/>
                 <para/>
            
                 NOTE: It is not an error to add a handler twice
                 (handler will simply be called twice) <para/>
                 <para/>
            
                 Input parameters <see cref="T:nanoFramework.UI.RoutedEvent"/>
                 and handler cannot be null <para/>
                 handledEventsToo input parameter when false means
                 that listener does not care about already handled events.
                 Hence the handler will not be invoked on the target if
                 the RoutedEvent has already been
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Handled"/> <para/>
                 handledEventsToo input parameter when true means
                 that the listener wants to hear about all events even if
                 they have already been handled. Hence the handler will
                 be invoked irrespective of the event being
                 <see cref="P:nanoFramework.UI.RoutedEventArgs.Handled"/>
             </remarks>
             <param name="routedEvent">
                 <see cref="T:nanoFramework.UI.RoutedEvent"/> for which the handler
                 is attached
             </param>
             <param name="handler">
                 The handler that will be invoked on this object
                 when the RoutedEvent is raised
             </param>
             <param name="handledEventsToo">
                 Flag indicating whether or not the listener wants to
                 hear about events that have already been handled
             </param>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement.Pair.Flags_First">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement.Pair.Flags_Second">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement.Pair._first">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement.Pair._second">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement.Pair._status">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement._horizontalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.UIElement._verticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.UIElementCollection">
             <summary>
             A UIElementCollection is a ordered collection of UIElements.
             </summary>
             <remarks>
             A UIElementCollection has implied context affinity. It is a violation to access
             the collection from a different context than that of the owning Element
            
             This collection is an amalgam of UIElementCollection and UIElementCollection from Avalon
            
             </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.#ctor(nanoFramework.Presentation.UIElement)">
            <summary>  </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.Count">
            <summary>  </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.IsSynchronized">
            <summary>  </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.SyncRoot">
            <summary>  </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the UIElement collection to the specified array starting at the specified index.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.CopyTo(nanoFramework.Presentation.UIElement[],System.Int32)">
            <summary>
            Strongly typed version of CopyTo
            Copies the collection into the Array.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.EnsureCapacity(System.Int32)">
            <summary>
            Ensures that the capacity of this list is at least the given minimum
            value. If the currect capacity of the list is less than min, the
            capacity is increased to min.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.Capacity">
             <summary>
             Gets or sets the number of elements that the UIElementCollection can contain.
             </summary>
             <value>
             The number of elements that the UIElementCollection can contain.
             </value>
             <remarks>
             Capacity is the number of elements that the UIElementCollection is capable of storing.
             Count is the number of UIElements that are actually in the UIElementCollection.
            
             Capacity is always greater than or equal to Count. If Count exceeds
             Capacity while adding elements, the capacity of the UIElementCollection is increased.
            
             By default the capacity is 0.
             </remarks>
             <exception cref="T:System.ArgumentOutOfRangeException">Capacity is set to a value that is less than Count.</exception>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.Item(System.Int32)">
            <summary>
            Indexer for the UIElementCollection. Gets or sets the UIElement stored at the
            zero-based index of the UIElementCollection.
            </summary>
            <remarks>This property provides the ability to access a specific UIElement in the
            UIElementCollection by using the following systax: <c>myUIElementCollection[index]</c>.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException"><c>index</c> is less than zero -or- <c>index</c> is equal to or greater than Count.</exception>
            <exception cref="T:System.ArgumentException">If the new child has already a parent or if the slot a the specified index is not null.</exception>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.ConnectChild(System.Int32,nanoFramework.Presentation.UIElement)">
            <summary>
            Sets the specified element at the specified index into the child
            collection. It also corrects the parent.
            Note that the function requires that _item[index] == null and it
            also requires that the passed in child is not connected to another UIElement.
            </summary>
            <exception cref="T:System.ArgumentException">If the new child has already a parent or if the slot a the specified index is not null.</exception>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.DisconnectChild(System.Int32)">
            <summary>
            Disconnects a child.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Add(nanoFramework.Presentation.UIElement)">
            <summary>
            Appends a UIElement to the end of the UIElementCollection.
            </summary>
            <param name="element"></param>
            <returns>The UIElementCollection index at which the UIElement has been added.</returns>
            <remarks>Adding a null is allowed.</remarks>
            <summary>
            </summary>
            <exception cref="T:System.ArgumentException">If the new child has already a parent.</exception>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.IndexOf(nanoFramework.Presentation.UIElement)">
            <summary>
            Returns the zero-based index of the UIElement. If the UIElement is not
            in the UIElementCollection -1 is returned. If null is passed to the method, the index
            of the first entry with null is returned. If there is no null entry -1 is returned.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Remove(nanoFramework.Presentation.UIElement)">
             <summary>
             Removes the specified element from the UIElementCollection.
             </summary>
             <param name="element">The UIElement to remove from the UIElementCollection.</param>
             <remarks>
             The UIElements that follow the removed UIElements move up to occupy
             the vacated spot. The indexes of the UIElements that are moved are
             also updated.
            
             If element is null then the first null entry is removed. Note that removing
             a null entry is linear in the size of the collection.
             </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Contains(nanoFramework.Presentation.UIElement)">
            <summary>
            Determines whether a element is in the UIElementCollection.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Clear">
            <summary>
            Removes all elements from the UIElementCollection.
            </summary>
            <remarks>
            Count is set to zero. Capacity remains unchanged.
            To reset the capacity of the UIElementCollection, call TrimToSize
            or set the Capacity property directly.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Insert(System.Int32,nanoFramework.Presentation.UIElement)">
             <summary>
             Inserts an element into the UIElementCollection at the specified index.
             </summary>
             <param name="index">The zero-based index at which value should be inserted.</param>
             <param name="element">The UIElement to insert. </param>
             <exception cref="T:System.ArgumentOutOfRangeException">
             index is less than zero.
            
             -or-
            
             index is greater than Count.
             </exception>
             <remarks>
             If Count already equals Capacity, the capacity of the
             UIElementCollection is increased before the new UIElement
             is inserted.
            
             If index is equal to Count, value is added to the
             end of UIElementCollection.
            
             The UIElements that follow the insertion point move down to
             accommodate the new UIElement. The indexes of the UIElements that are
             moved are also updated.
             </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the UIElement at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">index is less than zero
            - or - index is equal or greater than count.</exception>
            <remarks>
            The UIElements that follow the removed UIElements move up to occupy
            the vacated spot. The indexes of the UIElements that are moved are
            also updated.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.RemoveRange(System.Int32,System.Int32)">
            <summary>
            Removes a range of UIElements from the UIElementCollection.
            </summary>
            <param name="index">The zero-based index of the range
            of elements to remove</param>
            <param name="count">The number of elements to remove.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            index is less than zero.
            -or-
            count is less than zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            index and count do not denote a valid range of elements in the UIElementCollection.
            </exception>
            <remarks>
            The UIElements that follow the removed UIElements move up to occupy
            the vacated spot. The indexes of the UIElements that are moved are
            also updated.
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the UIElementCollection.
            </summary>
            <returns>Enumerator that enumerates the UIElementCollection in order.</returns>
        </member>
        <member name="T:nanoFramework.Presentation.UIElementCollection.Enumerator">
             <summary>
             This is a simple UIElementCollection enumerator that is based on
             the ArrayListEnumeratorSimple that is used for ArrayLists.
            
             The following comment is from the CLR people:
               For a straightforward enumeration of the entire ArrayList,
               this is faster, because it's smaller.  Benchmarks showed
               this.
             </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Enumerator.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Enumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.Enumerator.System#Collections#IEnumerator#Current">
            <summary>
            Gets the current UIElement.
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.UIElementCollection.Enumerator.Current">
            <summary>
            Gets the current UIElement.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.UIElementCollection.Enumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the first element in the collection.
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.VerticalAlignment">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.VerticalAlignment.Top">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.VerticalAlignment.Center">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.VerticalAlignment.Bottom">
            <summary>
            
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.VerticalAlignment.Stretch">
            <summary>
            
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Visibility">
            <summary>
            Visibility - Enum which describes 3 possible visibility options.
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Visibility.Visible">
            <summary>
            Normally visible.
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Visibility.Hidden">
            <summary>
            Occupies space in the layout, but is not visible (completely transparent).
            </summary>
        </member>
        <member name="F:nanoFramework.Presentation.Visibility.Collapsed">
            <summary>
            Not visible and does not occupy any space in layout, as if it doesn't exist.
            </summary>
        </member>
        <member name="T:nanoFramework.Presentation.Window">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Window.#ctor">
            <summary>
                Constructs a window object
            </summary>
            <remarks>
                Automatic determination of current Dispatcher. Use alternative constructor
                that accepts a Dispatcher for best performance.
            REFACTOR -- consider specifying app default window sizes to cover Aux case for default window size.
            </remarks>
                Initializes the Width/Height, Top/Left properties to use windows
                default. Updates Application object properties if inside app.
        </member>
        <member name="M:nanoFramework.Presentation.Window.Close">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Window.SizeToContent">
            <summary>
            Auto size Window to its content's size
            </summary>
            <remarks>
            1. SizeToContent can be applied to Width Height independently
            2. After SizeToContent is set, setting Width/Height does not take affect if that
               dimension is sizing to content.
            </remarks>
            <value>
            Default value is SizeToContent.Manual
            </value>
        </member>
        <member name="P:nanoFramework.Presentation.Window.Top">
            <summary>
                Position for Top of the host window
            </summary>
            <value></value>
        </member>
        <member name="P:nanoFramework.Presentation.Window.Left">
            <summary>
            
            </summary>
        </member>
        <member name="P:nanoFramework.Presentation.Window.Topmost">
            <summary>
                Determines if this window is always on the top.
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.Window.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
                Measurement override. Implements content sizing logic.
            </summary>
            <remarks>
                Deducts the frame size from the constraint and then passes it on
                to it's child.  Only supports one Visual child (just like control)
            </remarks>
        </member>
        <member name="M:nanoFramework.Presentation.Window.ArrangeOverride(System.Int32,System.Int32)">
            <summary>
                ArrangeOverride allows for the customization of the positioning of children.
            </summary>
            <remarks>
                Deducts the frame size of the window from the constraint and then
                arranges it's child.  Supports only one child.
            </remarks>
        </member>
        <member name="T:nanoFramework.Presentation.PostRenderEventHandler">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Presentation.WindowManager">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.WindowManager.MeasureOverride(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            
            </summary>
            <param name="availableWidth"></param>
            <param name="availableHeight"></param>
            <param name="desiredWidth"></param>
            <param name="desiredHeight"></param>
        </member>
        <member name="M:nanoFramework.Presentation.WindowManager.OnChildrenChanged(nanoFramework.Presentation.UIElement,nanoFramework.Presentation.UIElement,System.Int32)">
            <summary>
            
            </summary>
            <param name="added"></param>
            <param name="removed"></param>
            <param name="indexAffected"></param>
        </member>
        <member name="F:nanoFramework.Presentation.WindowManager.Instance">
            <summary>
            
            </summary>
        </member>
        <member name="E:nanoFramework.Presentation.WindowManager.PostRender">
            <summary>
            
            </summary>
        </member>
        <member name="M:nanoFramework.Presentation.WindowManager.RenderRecursive(nanoFramework.Presentation.Media.DrawingContext)">
            <summary>
            
            </summary>
            <param name="dc"></param>
        </member>
        <member name="T:nanoFramework.Runtime.Events.GenericEventEx">
            <summary>
            Creates an instance of the <see cref="T:nanoFramework.Runtime.Events.GenericEvent"/> class.
            </summary>
        </member>
        <member name="F:nanoFramework.Runtime.Events.GenericEventEx.X">
            <summary>
            Specifies additional position information.
            </summary>
        </member>
        <member name="F:nanoFramework.Runtime.Events.GenericEventEx.Y">
            <summary>
            Specifies additional position information.
            </summary>
        </member>
    </members>
</doc>
